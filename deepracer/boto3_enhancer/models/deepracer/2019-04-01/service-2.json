{
  "version": "2.0",
  "metadata": {
    "apiVersion": "2019-04-01",
    "signingName": "deepracer",
    "endpointPrefix": "deepracer-prod",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceFullName": "AWS DeepRacer",
    "serviceId": "DeepRacer",
    "signatureVersion": "v4",
    "targetPrefix": "AwsSilverstoneCloudService",
    "uid": "deepracer-2019-04-01"
  },
  "operations": {
    "AddLeaderboardAccessPermission": {
      "name": "AddLeaderboardAccessPermission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AddLeaderboardAccessPermissionRequest"
      },
      "output": {
        "shape": "AddLeaderboardAccessPermissionResponse"
      },
      "documentation": "<p>Join a community race.</p><p>Using this method you can join the race without having to open the AWS DeepRacer Console.</p><p>When successful, the leaderboard for a given race will be available to you in the leaderboards list</p>"
    },
    "AdminGetAccountConfig": {
      "name": "AdminGetAccountConfig",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AdminGetAccountConfigRequest"
      },
      "output": {
        "shape": "AdminGetAccountConfigResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "AdminListAssociatedResources": {
      "name": "AdminListAssociatedResources",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AdminListAssociatedResourcesRequest"
      },
      "output": {
        "shape": "AdminListAssociatedResourcesResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "AdminListAssociatedUsers": {
      "name": "AdminListAssociatedUsers",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AdminListAssociatedUsersRequest"
      },
      "output": {
        "shape": "AdminListAssociatedUsersResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "AdminManageUser": {
      "name": "AdminManageUser",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AdminManageUserRequest"
      },
      "output": {
        "shape": "AdminManageUserResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "AdminSetAccountConfig": {
      "name": "AdminSetAccountConfig",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AdminSetAccountConfigRequest"
      },
      "output": {
        "shape": "AdminSetAccountConfigResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "CloneReinforcementLearningModel": {
      "name": "CloneReinforcementLearningModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CloneReinforcementLearningModelRequest"
      },
      "output": {
        "shape": "CloneReinforcementLearningModelResponse"
      },
      "documentation": "<p>Clones an existing model and continues training with new instructions</p>"
    },
    "CreateCar": {
      "name": "CreateCar",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateCarRequest"
      },
      "output": {
        "shape": "CreateCarResponse"
      },
      "documentation": "<p>Create a new car to train your model with.</p><p>You can choose various settings for your car including the action space, name or look.</p><p>There is a limit of 20 cars that you can create. If you reach this limit, update an existing car instead using update-car</p>"
    },
    "CreateLeaderboard": {
      "name": "CreateLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLeaderboardRequest"
      },
      "output": {
        "shape": "CreateLeaderboardResponse"
      },
      "documentation": "<p>Creates a race</p>"
    },
    "CreateLeaderboardAccessToken": {
      "name": "CreateLeaderboardAccessToken",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLeaderboardAccessTokenRequest"
      },
      "output": {
        "shape": "CreateLeaderboardAccessTokenResponse"
      },
      "documentation": "<p>Create a new invitation token for the community race. It is useful if your existing invitation link has been shared outside of your desired users.</p><p>To use the new token simply put it in place of [token] in url https://console.aws.amazon.com/deepracer/home#raceToken/[token]</p><p>Creation of a new access token makes the old token invalid.</p>"
    },
    "CreateLeaderboardSubmission": {
      "name": "CreateLeaderboardSubmission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLeaderboardSubmissionRequest"
      },
      "output": {
        "shape": "CreateLeaderboardSubmissionResponse"
      },
      "documentation": "<p>Submit a model to a race.</p><p>Simply choose the model and a race and your submission will be created</p><p>When creating your first submission you need to confirm that you accept the terms and conditions of it. If you don't, you will not be allowed to submit your entry.</p>"
    },
    "CreateReinforcementLearningModel": {
      "name": "CreateReinforcementLearningModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateReinforcementLearningModelRequest"
      },
      "output": {
        "shape": "CreateReinforcementLearningModelResponse"
      },
      "documentation": "<p>Starts a new training with instructions provided.</p><p>A new model is created and used in the training session to gather experiences, then it is updated in the learning session based on the reward gathered.</p><p>While you can start training through the cli/boto3, it is recommended that you use the Deepracer Console instead for a richer experience.</p>"
    },
    "DeleteLeaderboard": {
      "name": "DeleteLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteLeaderboardRequest"
      },
      "output": {
        "shape": "DeleteLeaderboardResponse"
      },
      "documentation": "<p>Deletes a race</p>"
    },
    "DeleteModel": {
      "name": "DeleteModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteModelRequest"
      },
      "output": {
        "shape": "DeleteModelResponse"
      },
      "documentation": "<p>Delete existing model.</p><p>This method lets you limit your AWS DeepRacer model storage costs "
    },
    "EditLeaderboard": {
      "name": "EditLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "EditLeaderboardRequest"
      },
      "output": {
        "shape": "EditLeaderboardResponse"
      },
      "documentation": "<p>Updates a race</p>"
    },
    "GetAccountConfig": {
      "name": "GetAccountConfig",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetAccountConfigRequest"
      },
      "output": {
        "shape": "GetAccountConfigResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "GetAlias": {
      "name": "GetAlias",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "output": {
        "shape": "GetAliasResponse"
      },
      "documentation": "<p>Displays the racer alias assigned to given account</p>"
    },
    "GetAssetUrl": {
      "name": "GetAssetUrl",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetAssetUrlRequest"
      },
      "output": {
        "shape": "GetAssetUrlResponse"
      },
      "documentation": "<p>Used to fetch various assets related to a model, training or race submission</p><p>Returns a Url that you can use to fetch things like logs, models etc.</p><p>Asset types prefixed with S3 are for copying assets to S3 (operations available in a model view under Actions->Copy to S3 )."
    },
    "GetBYOAJob": {
      "name": "GetBYOAJob",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetBYOAJobRequest"
      },
      "output": {
        "shape": "GetBYOAJobResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "GetCar": {
      "name": "GetCar",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetCarRequest"
      },
      "output": {
        "shape": "GetCarResponse"
      },
      "documentation": "<p>Returns current car settings.</p>"
    },
    "GetCars": {
      "name": "GetCars",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetCarsRequest"
      },
      "output": {
        "shape": "GetCarsResponse"
      },
      "documentation": "<p>Returns a list of configured cars</p>"
    },
    "GetEvaluation": {
      "name": "GetEvaluation",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetEvaluationRequest"
      },
      "output": {
        "shape": "GetEvaluationResponse"
      },
      "documentation": "<p>Get evaluation details.</p><p>Returns information about a given evaluation</p>"
    },
    "GetLatestUserSubmission": {
      "name": "GetLatestUserSubmission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLatestUserSubmissionRequest"
      },
      "output": {
        "shape": "GetLatestUserSubmissionResponse"
      },
      "documentation": "<p>Returns information about the most recent model submission status</p><p>This is the information that you will see next to your name on the race page.</p>"
    },
    "GetLeaderboard": {
      "name": "GetLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLeaderboardRequest"
      },
      "output": {
        "shape": "GetLeaderboardResponse"
      },
      "documentation": "<p>Returns a details for a race</p><p>Does not return the entrants ranking - that is available through ListLeaderboardSubmissions (list-leaderboard-submissions for AWS CLI).</p>"
    },
    "GetModel": {
      "name": "GetModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetModelRequest"
      },
      "output": {
        "shape": "GetModelResponse"
      },
      "documentation": "<p>Fetch information about the model</p>"
    },
    "GetRankedUserSubmission": {
      "name": "GetRankedUserSubmission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetRankedUserSubmissionRequest"
      },
      "output": {
        "shape": "GetRankedUserSubmissionResponse"
      },
      "documentation": "<p>Returns current user's best submission for a given race.</p>"
    },
    "GetRecords": {
      "name": "GetRecords",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "output": {
        "shape": "GetRecordsResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "GetTournament": {
      "name": "GetTournament",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTournamentRequest"
      },
      "output": {
        "shape": "GetTournamentResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "GetTrack": {
      "name": "GetTrack",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTrackRequest"
      },
      "output": {
        "shape": "GetTrackResponse"
      },
      "documentation": "<p>Provides information about a given track.</p>"
    },
    "GetTrainingJob": {
      "name": "GetTrainingJob",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTrainingJobRequest"
      },
      "output": {
        "shape": "GetTrainingJobResponse"
      },
      "documentation": "<p>Get information about how a model is being trained</p>"
    },
    "ImportModel": {
      "name": "ImportModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ImportModelRequest"
      },
      "output": {
        "shape": "ImportModelResponse"
      },
      "documentation": "<p>Import a model from S3 into console</p><p>Allows to import a model from backup or alternative training solution and clone for more training or submit to a race.</p>"
    },
    "ListBYOAJobs": {
      "name": "ListBYOAJobs",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListBYOAJobsRequest"
      },
      "output": {
        "shape": "ListBYOAJobsResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "ListEvaluations": {
      "name": "ListEvaluations",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListEvaluationsRequest"
      },
      "output": {
        "shape": "ListEvaluationsResponse"
      },
      "documentation": "<p>Returns a list of evaluations performed on a given model.</p>"
    },
    "ListLeaderboardSubmissions": {
      "name": "ListLeaderboardSubmissions",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLeaderboardSubmissionsRequest"
      },
      "output": {
        "shape": "ListLeaderboardSubmissionsResponse"
      },
      "documentation": "<p>Returns an ordered list of a given race entries.</p>"
    },
    "ListLeaderboardWinners": {
      "name": "ListLeaderboardWinners",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLeaderboardWinnersRequest"
      },
      "output": {
        "shape": "ListLeaderboardWinnersResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "ListLeaderboards": {
      "name": "ListLeaderboards",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLeaderboardsRequest"
      },
      "output": {
        "shape": "ListLeaderboardsResponse"
      },
      "documentation": "<p>List races that current user has access to</p>"
    },
    "ListModels": {
      "name": "ListModels",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListModelsRequest"
      },
      "output": {
        "shape": "ListModelsResponse"
      },
      "documentation": "<p>List current user's models</p>"
    },
    "ListPrivateLeaderboardParticipants": {
      "name": "ListPrivateLeaderboardParticipants",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListPrivateLeaderboardParticipantsRequest"
      },
      "output": {
        "shape": "ListPrivateLeaderboardParticipantsResponse"
      },
      "documentation": "<p>Lists users which have joined a private race.</p><p>For public race Arn an empty list is returned</p>"
    },
    "ListTagsForResource": {
      "name": "ListTagsForResource",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "output": {
        "shape": "ListTagsForResourceResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "ListTracks": {
      "name": "ListTracks",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTracksRequest"
      },
      "output": {
        "shape": "ListTracksResponse"
      },
      "documentation": "<p>List available tracks</p>"
    },
    "ListTrainingJobs": {
      "name": "ListTrainingJobs",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTrainingJobsRequest"
      },
      "output": {
        "shape": "ListTrainingJobsResponse"
      },
      "documentation": "<p>List current user's training jobs</p><p>Training jobs are associated with models that user has.</p>"
    },
    "PerformLeaderboardOperation": {
      "name": "PerformLeaderboardOperation",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "PerformLeaderboardOperationRequest"
      },
      "output": {
        "shape": "PerformLeaderboardOperationResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "RemoveLeaderboardAccessPermission": {
      "name": "RemoveLeaderboardAccessPermission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "RemoveLeaderboardAccessPermissionRequest"
      },
      "output": {
        "shape": "RemoveLeaderboardAccessPermissionResponse"
      },
      "documentation": "<p>Removes a racer from a community race administrated by the current user.</p>"
    },
    "RunTournament": {
      "name": "RunTournament",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "RunTournamentRequest"
      },
      "output": {
        "shape": "RunTournamentResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "SetAlias": {
      "name": "SetAlias",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "SetAliasRequest"
      },
      "documentation": "<p>Set your racer name.</p>\n<p>The names are checked in terms approprietness. You may have your name rejected if a disallowed word is a substring of it.</p>"
    },
    "StartBYOAJob": {
      "name": "StartBYOAJob",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartBYOAJobRequest"
      },
      "output": {
        "shape": "StartBYOAJobResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "StartEvaluation": {
      "name": "StartEvaluation",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartEvaluationRequest"
      },
      "output": {
        "shape": "StartEvaluationResponse"
      },
      "documentation": "<p>Evaluate your model in conditions of your choice.</p><p>This is a great opportunity to check how your model is doing without the entropy altering it actions which happens during the training. But there's more: you can try a different track, different racing format or even race your model against a car with another model that you have trained.</p>"
    },
    "StopBYOAJob": {
      "name": "StopBYOAJob",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopBYOAJobRequest"
      },
      "output": {
        "shape": "StopBYOAJobResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "StopEvaluation": {
      "name": "StopEvaluation",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopEvaluationRequest"
      },
      "output": {
        "shape": "StopEvaluationResponse"
      },
      "documentation": "<p>Stop performing evaluation</p><p>The system will still take some time to shut everything down, but the evaluation will have been stopped at the time of request</p>"
    },
    "StopTrainingReinforcementLearningModel": {
      "name": "StopTrainingReinforcementLearningModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopTrainingReinforcementLearningModelRequest"
      },
      "output": {
        "shape": "StopTrainingReinforcementLearningModelResponse"
      },
      "documentation": "<p>Stop the training job.</p><p>The training will be immediately interrupted and will perform a shutdown of the environment which can take a few minutes. Once done, you will be able to evaluate, clone or submit your model to a race. The interrupted iteration is discarded and only the last and the best complete iterations are being stored.</p>"
    },
    "TagResource": {
      "name": "TagResource",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "output": {
        "shape": "TagResourceResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "TestRewardFunction": {
      "name": "TestRewardFunction",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "TestRewardFunctionRequest"
      },
      "output": {
        "shape": "TestRewardFunctionResponse"
      },
      "documentation": "<p>Test reward function. Submit your function to perform a number of tests against it.</p><p>Not all problems are clearly communicated even if caught, for instance whitespace issues. If you don't get the details that could help you, do revert to a code editor of your choice.</p>"
    },
    "UntagResource": {
      "name": "UntagResource",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "output": {
        "shape": "UntagResourceResponse"
      },
      "documentation": "<p>TODO</p>"
    },
    "UpdateCar": {
      "name": "UpdateCar",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateCarRequest"
      },
      "output": {
        "shape": "UpdateCarResponse"
      },
      "documentation": "<p>Change settings of your car</p><p>You can choose various settings for your car including the action space, name or look.</p><p>Changing the settings for a car only affects new models being created from scratch. Old models and their clones will continue to use the old settings which are stored with the model at the start of a new training and then passed on during cloning.</p>"
    },
    "VerifyResourcesExistForTagris": {
      "name": "VerifyResourcesExistForTagris",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "VerifyResourcesExistForTagrisRequest"
      },
      "output": {
        "shape": "VerifyResourcesExistForTagrisResponse"
      },
      "documentation": "<p>TODO</p>"
    }
  },
  "shapes": {
    "AccessToken": {
      "type": "string",
      "sensitive": true
    },
    "AccountId": {
      "type": "string",
      "max": 12,
      "min": 12,
      "pattern": "[0-9]{12}"
    },
    "AttachedRewards": {
      "type": "list",
      "member": {
        "shape": "StandardLengthString"
      }
    },
    "Accessories": {
      "type": "string",
      "enum": [
        "Blank",
        "Prescription02",
        "Round",
        "Prescription01",
        "Sunglasses",
        "Wayfarers",
        "Kurt"
      ]
    },
    "ActionSpace": {
      "type": "structure",
      "required": [
        "ActionSpaceType"
      ],
      "members": {
        "ActionSpaceType": {
          "shape": "ActionSpaceType"
        },
        "ContinuousActionSpace": {
          "shape": "ContinuousActionSpace"
        },
        "DiscreteActionSpace": {
          "shape": "DiscreteActionSpaceList"
        }
      }
    },
    "ActionSpaceType": {
      "type": "string"
    },
    "ActivityJob": {
      "type": "structure",
      "required": [
        "CreationTime",
        "StartTime",
        "Status"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "CreationTime": {
          "shape": "long"
        },
        "FailureReason": {
          "shape": "Description"
        },
        "StartTime": {
          "shape": "long"
        },
        "EndTime": {
          "shape": "long"
        },
        "Status": {
          "shape": "ActivityStatus"
        },
        "MetricsS3Path": {
          "shape": "StandardLengthString"
        },
        "MetricsPreSignedUrl": {
          "shape": "Url"
        },
        "Videos": {
          "shape": "ActivityVideos"
        },
        "LogDownloadComplete": {
          "shape": "boolean"
        },
        "VideoPreSignedUrl": {
          "shape": "Url"
        }
      }
    },
    "ActivityJobStatus": {
      "type": "string",
      "enum": [
        "CREATED",
        "INITIALIZING",
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED",
        "STOPPING"
      ]
    },
    "ActivityStatus": {
      "type": "structure",
      "required": [
        "JobStatus",
        "TimeInMinutes",
        "Units"
      ],
      "members": {
        "JobStatus": {
          "shape": "ActivityJobStatus"
        },
        "Score": {
          "shape": "integer"
        },
        "TimeInMinutes": {
          "shape": "NonNegativeInteger"
        },
        "Units": {
          "shape": "NonNegativeInteger"
        }
      }
    },
    "ActivityVideo": {
      "type": "structure",
      "members": {
        "KinesisVideoStreamArn": {
          "shape": "StandardLengthString"
        },
        "S3Location": {
          "shape": "StandardLengthString"
        },
        "KinesisVideoUrl": {
          "shape": "StandardLengthString"
        },
        "KinesisVideoUrlExpiry": {
          "shape": "epochTimeMillis"
        }
      }
    },
    "ActivityVideoAngle": {
      "type": "string",
      "enum": [
        "FRONT"
      ]
    },
    "ActivityVideos": {
      "type": "map",
      "key": {
        "shape": "ActivityVideoAngle"
      },
      "value": {
        "shape": "ActivityVideo"
      }
    },
    "AddLeaderboardAccessPermissionRequest": {
      "type": "structure",
      "required": [
        "AccessToken"
      ],
      "members": {
        "AccessToken": {
          "shape": "AccessToken"
        },
        "UserIds": {
          "shape": "UserIds"
        }
      }
    },
    "AddLeaderboardAccessPermissionResponse": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "AdminGetAccountConfigRequest": {
      "type": "structure",
      "members": {}
    },
    "AdminGetAccountConfigResponse": {
      "type": "structure",
      "required": [
        "MultiracerConfig"
      ],
      "members": {
        "MultiracerConfig": {
          "shape": "MultiracerConfig"
        }
      }
    },
    "AdminListAssociatedResourcesRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "integer"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "UserId": {
          "shape": "StandardLengthString"
        }
      }
    },
    "AdminListAssociatedResourcesResponse": {
      "type": "structure",
      "required": [
        "AssociatedResources"
      ],
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "AssociatedResources": {
          "shape": "AssociatedResources"
        }
      }
    },
    "AdminListAssociatedUsersRequest": {
      "type": "structure",
      "members": {
        "MaxResults": {
          "shape": "integer"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "UserState": {
          "shape": "UserState"
        }
      }
    },
    "AdminListAssociatedUsersResponse": {
      "type": "structure",
      "required": [
        "AssociatedUsers"
      ],
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "AssociatedUsers": {
          "shape": "AssociatedUsers"
        }
      }
    },
    "AdminManageUserRequest": {
      "type": "structure",
      "required": [
        "UserIds",
        "Action"
      ],
      "members": {
        "UserIds": {
          "shape": "UserIds"
        },
        "Action": {
          "shape": "UserAction"
        },
        "Limits": {
          "shape": "UserLimits"
        }
      }
    },
    "AdminManageUserResponse": {
      "type": "structure",
      "members": {}
    },
    "AdminSetAccountConfigRequest": {
      "type": "structure",
      "required": [
        "MultiracerConfig"
      ],
      "members": {
        "MultiracerConfig": {
          "shape": "MultiracerConfig"
        }
      }
    },
    "AdminSetAccountConfigResponse": {
      "type": "structure",
      "members": {}
    },
    "AgentAlgorithm": {
      "type": "string",
      "enum": [
        "PPO",
        "SAC"
      ]
    },
    "AgentNetwork": {
      "type": "string",
      "enum": [
        "SIX_LAYER_DOUBLE_HEAD_OUTPUT"
      ]
    },
    "Alias": {
      "type": "string",
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "Arn": {
      "type": "string",
      "pattern": "arn:.*"
    },
    "AssetType": {
      "type": "string",
      "enum": [
        "S3_PKG_MODEL_VIDEOS",
        "S3_PKG_MODEL_LOGS_VIDEOS",
        "S3_PKG_LOGS",
        "ROBOMAKER_CLOUDWATCH_LOG",
        "SAGEMAKER_CLOUDWATCH_LOG",
        "MODEL_ARTIFACT",
        "S3_PKG_VIDEOS",
        "COMPLETE_MODEL_ARTIFACT",
        "LOGS",
        "S3_PKG_LOGS_VIDEOS",
        "S3_PKG_MODEL_LOGS",
        "S3_PKG_MODEL",
        "VIDEOS",
        "ROBOMAKER_METRICS"
      ]
    },
    "AssociatedResource": {
      "type": "structure",
      "required": [
        "UserId",
        "Models"
      ],
      "members": {
        "UserId": {
          "shape": "StandardLengthString"
        },
        "Models": {
          "shape": "ModelList"
        }
      }
    },
    "AssociatedResources": {
      "type": "list",
      "member": {
        "shape": "AssociatedResource"
      }
    },
    "AssociatedUser": {
      "type": "structure",
      "required": [
        "Alias",
        "UserId",
        "AssociatedOn",
        "ComputeMinutesUsed",
        "ComputeMinutesQueued",
        "MaxTotalComputeMinutes",
        "MaxModels",
        "StorageBytesUsed",
        "UserState"
      ],
      "members": {
        "Alias": {
          "shape": "Alias"
        },
        "UserId": {
          "shape": "StandardLengthString"
        },
        "AssociatedOn": {
          "shape": "long"
        },
        "ComputeMinutesUsed": {
          "shape": "integer"
        },
        "ComputeMinutesQueued": {
          "shape": "integer"
        },
        "MaxTotalComputeMinutes": {
          "shape": "integer"
        },
        "MaxModels": {
          "shape": "integer"
        },
        "StorageBytesUsed": {
          "shape": "long"
        },
        "UserState": {
          "shape": "UserState"
        }
      }
    },
    "AssociatedUsers": {
      "type": "list",
      "member": {
        "shape": "AssociatedUser"
      }
    },
    "AutoSubmission": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "AutoSubmissionStatus": {
          "shape": "AutoSubmissionStatus"
        },
        "TermsAccepted": {
          "shape": "boolean"
        }
      }
    },
    "AutoSubmissionStatus": {
      "type": "string",
      "enum": [
        "WAITING_FOR_TRAINING",
        "SUBMITTED",
        "TRAINING_FAILED",
        "SUBMISSION_SQS_FAILED",
        "SUBMISSION_REQUEST_FAILED"
      ]
    },
    "AvailableTrackFeatures": {
      "type": "structure",
      "members": {
        "EnabledDirections": {
          "shape": "Directions"
        },
        "DefaultDirection": {
          "shape": "Direction"
        }
      }
    },
    "AvatarConfig": {
      "type": "structure",
      "members": {
        "Accessories": {
          "shape": "Accessories"
        },
        "Clothing": {
          "shape": "Clothing"
        },
        "ClothingColor": {
          "shape": "ClothingColor"
        },
        "CountryCode": {
          "shape": "CountryCode"
        },
        "Eyes": {
          "shape": "Eyes"
        },
        "Eyebrows": {
          "shape": "Eyebrows"
        },
        "FacialHair": {
          "shape": "FacialHair"
        },
        "FacialHairColor": {
          "shape": "FacialHairColor"
        },
        "HairColor": {
          "shape": "HairColor"
        },
        "HatColor": {
          "shape": "HatColor"
        },
        "Mouth": {
          "shape": "Mouth"
        },
        "SkinColor": {
          "shape": "SkinColor"
        },
        "Top": {
          "shape": "Top"
        },
        "TshirtGraphic": {
          "shape": "TshirtGraphic"
        }
      }
    },
    "BYOAJob": {
      "type": "structure",
      "required": [
        "JobArn",
        "ActivityJob"
      ],
      "members": {
        "JobArn": {
          "shape": "Arn"
        },
        "Name": {
          "shape": "StandardLengthString"
        },
        "ActivityJob": {
          "shape": "ActivityJob"
        },
        "Config": {
          "shape": "BYOAJobConfig"
        },
        "EventResourceConfig": {
          "shape": "ResourceConfig"
        },
        "EventResourcesConfigs": {
          "shape": "EventResourcesConfigs"
        }
      }
    },
    "BYOAJobConfig": {
      "type": "structure",
      "required": [
        "TerminationConditions"
      ],
      "members": {
        "TerminationConditions": {
          "shape": "TerminationConditions"
        }
      }
    },
    "BYOAJobs": {
      "type": "list",
      "member": {
        "shape": "BYOAJob"
      }
    },
    "Car": {
      "type": "structure",
      "required": [
        "Customization",
        "Configuration"
      ],
      "members": {
        "Arn": {
          "shape": "CarArn"
        },
        "Customization": {
          "shape": "CarCustomization"
        },
        "Configuration": {
          "shape": "CarConfiguration"
        }
      }
    },
    "CarArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "^arn:aws:deepracer:[a-z0-9-]*:[0-9]{12}:car/[a-zA-Z0-9_\\-]+$"
    },
    "CarColor": {
      "type": "string",
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-_]+$"
    },
    "CarConfiguration": {
      "type": "structure",
      "required": [
        "NeuralNetwork",
        "Sensors"
      ],
      "members": {
        "ActionSpace": {
          "shape": "ActionSpace",
          "description": "<p>This is not needed anymore, cars no longer have the action space associated with them</p>"
        },
        "NeuralNetwork": {
          "shape": "NeuralNetwork"
        },
        "Sensors": {
          "shape": "SensorsList"
        }
      }
    },
    "CarControlConfig": {
      "type": "structure",
      "required": [
        "CarSpeedControl"
      ],
      "members": {
        "CarSpeedControl": {
          "shape": "boolean"
        }
      }
    },
    "CarCustomization": {
      "type": "structure",
      "required": [
        "Name",
        "Color"
      ],
      "members": {
        "Name": {
          "shape": "CarName"
        },
        "Color": {
          "shape": "CarColor"
        },
        "CarType": {
          "shape": "CarType"
        },
        "Top": {
          "shape": "PerspectiveCustomization"
        },
        "Sides": {
          "shape": "PerspectiveCustomization"
        },
        "Back": {
          "shape": "PerspectiveCustomization"
        }
      }
    },
    "CarDecal": {
      "type": "string",
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-_]+$"
    },
    "CarName": {
      "type": "string",
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-_]+$"
    },
    "CarType": {
      "type": "string",
      "enum": [
        "EVO",
        "F1"
      ]
    },
    "CarsList": {
      "type": "list",
      "member": {
        "shape": "Car"
      }
    },
    "CloneReinforcementLearningModelRequest": {
      "type": "structure",
      "required": [
        "ModelName",
        "TrainingConfig"
      ],
      "members": {
        "ModelArnToClone": {
          "shape": "ModelArn",
          "documentation": "<p>Identifies the base model that you wish to clone</p>"
        },
        "ModelName": {
          "shape": "ModelName",
          "documentation": "<p>The name that you want to give to your new model</p>"
        },
        "ModelDescription": {
          "shape": "Description",
          "documentation": "<p>Descirption that you want to give to your new model</p>"
        },
        "TrainingConfig": {
          "shape": "TrainingConfig",
          "documentation": "<p>Configuration of the training to be started after cloning</p>"
        },
        "RoleArn": {
          "shape": "RoleArn",
          "documentation": "<p>Arn Role of the user that allows to perform this operation</p>"
        },
        "AutoSubmission": {
          "shape": "AutoSubmission",
          "documentation": "<p>Decide whether after training completion you wish to submit the model to a race</p>"
        },
        "Tags": {
          "shape": "Tags"
        },
        "CarArn": {
          "shape": "CarArn"
        },
        "CustomActionSpace": {
          "shape": "ActionSpace"
        }
      }
    },
    "CloneReinforcementLearningModelResponse": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      },
      "documentation": "<p>Identifies the model that has been created</p>"
    },
    "Clothing": {
      "type": "string",
      "enum": [
        "CollarSweater",
        "Hoodie",
        "Overall",
        "BlazerSweater",
        "BlazerShirt",
        "ShirtCrewNeck",
        "GraphicShirt",
        "ShirtScoopNeck",
        "ShirtVNeck"
      ]
    },
    "ClothingColor": {
      "type": "string",
      "enum": [
        "Blue01",
        "Blue02",
        "Blue03",
        "Pink",
        "Red",
        "PastelBlue",
        "PastelGreen",
        "PastelOrange",
        "PastelRed",
        "PastelYellow",
        "Gray01",
        "Gray02",
        "Heather",
        "Black",
        "White"
      ]
    },
    "CodeBlock": {
      "type": "string",
      "max": 100000,
      "min": 1
    },
    "ContinuousActionSpace": {
      "type": "structure",
      "required": [
        "Speed",
        "SteeringAngle"
      ],
      "members": {
        "Speed": {
          "shape": "SpeedRange"
        },
        "SteeringAngle": {
          "shape": "SteeringAngleRange"
        }
      }
    },
    "CountryCode": {
      "type": "string",
      "max": 3,
      "min": 1,
      "pattern": "^[A-Z]+$"
    },
    "CreateCarRequest": {
      "type": "structure",
      "required": [
        "Car"
      ],
      "members": {
        "Car": {
          "shape": "Car"
        },
        "Tags": {
          "shape": "Tags"
        }
      }
    },
    "CreateCarResponse": {
      "type": "structure",
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "CreateLeaderboardRequest": {
      "type": "structure",
      "required": [
        "Definition",
        "RaceConfig",
        "Features"
      ],
      "members": {
        "Definition": {
          "shape": "LeaderboardDefinition"
        },
        "RaceConfig": {
          "shape": "RaceConfig"
        },
        "Features": {
          "shape": "Features"
        },
        "Tags": {
          "shape": "Tags"
        }
      }
    },
    "CreateLeaderboardResponse": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "Arn"
        }
      }
    },
    "CreateLeaderboardAccessTokenRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "ExpirationTime": {
          "shape": "long"
        }
      }
    },
    "CreateLeaderboardAccessTokenResponse": {
      "type": "structure",
      "required": [
        "AccessToken"
      ],
      "members": {
        "AccessToken": {
          "shape": "AccessToken"
        }
      }
    },
    "CreateLeaderboardSubmissionRequest": {
      "type": "structure",
      "required": [
        "ModelArn",
        "LeaderboardArn"
      ],
      "members": {
        "SubmissionDescription": {
          "shape": "Description"
        },
        "ModelArn": {
          "shape": "ModelArn"
        },
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "TermsAccepted": {
          "shape": "boolean"
        },
        "RoleArn": {
          "shape": "RoleArn"
        },
        "AutoSubmission": {
          "shape": "AutoSubmission"
        },
        "SubmissionOverrides": {
          "shape": "SubmissionOverrides"
        },
        "UserId": {
          "shape": "StandardLengthString"
        }
      }
    },
    "CreateLeaderboardSubmissionResponse": {
      "type": "structure",
      "members": {}
    },
    "CreateReinforcementLearningModelRequest": {
      "type": "structure",
      "required": [
        "ModelName",
        "ModelFramework",
        "AgentAlgorithm",
        "AgentNetwork",
        "TrainingConfig"
      ],
      "members": {
        "ModelName": {
          "shape": "ModelName"
        },
        "ModelFramework": {
          "shape": "ModelFramework"
        },
        "ModelDescription": {
          "shape": "Description"
        },
        "AgentAlgorithm": {
          "shape": "AgentAlgorithm"
        },
        "AgentNetwork": {
          "shape": "AgentNetwork"
        },
        "TrainingConfig": {
          "shape": "TrainingConfig"
        },
        "CarArn": {
          "shape": "CarArn"
        },
        "RoleArn": {
          "shape": "RoleArn"
        },
        "AutoSubmission": {
          "shape": "AutoSubmission"
        },
        "Tags": {
          "shape": "Tags"
        },
        "CustomActionSpace": {
          "shape": "ActionSpace"
        }
      }
    },
    "CreateReinforcementLearningModelResponse": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "DeleteLeaderboardRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "DeleteLeaderboardResponse": {
      "type": "structure",
      "members": {}
    },
    "DeleteModelRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "DeleteModelResponse": {
      "type": "structure",
      "members": {}
    },
    "Description": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^.+$"
    },
    "Details": {
      "type": "string",
      "min": 1
    },
    "Dimension": {
      "type": "structure",
      "members": {
        "Name": {
          "shape": "StandardLengthString"
        },
        "Value": {
          "shape": "StandardLengthString"
        }
      }
    },
    "DimensionList": {
      "type": "list",
      "member": {
        "shape": "Dimension"
      }
    },
    "Direction": {
      "type": "string",
      "enum": [
        "CLOCKWISE",
        "COUNTER_CLOCKWISE"
      ]
    },
    "Directions": {
      "type": "list",
      "member": {
        "shape": "Direction"
      }
    },
    "DiscreteActionSpace": {
      "type": "structure",
      "required": [
        "Speed",
        "SteeringAngle"
      ],
      "members": {
        "Speed": {
          "shape": "double"
        },
        "SteeringAngle": {
          "shape": "double"
        }
      }
    },
    "DiscreteActionSpaceList": {
      "type": "list",
      "member": {
        "shape": "DiscreteActionSpace"
      }
    },
    "Division": {
      "type": "string",
      "max": 64,
      "min": 1
    },
    "EditLeaderboardRequest": {
      "type": "structure",
      "required": [
        "Arn",
        "Definition",
        "RaceConfig",
        "Features"
      ],
      "members": {
        "Arn": {
          "shape": "LeaderboardArn"
        },
        "Definition": {
          "shape": "LeaderboardDefinition"
        },
        "RaceConfig": {
          "shape": "RaceConfig"
        },
        "Features": {
          "shape": "Features"
        }
      }
    },
    "EditLeaderboardResponse": {
      "type": "structure",
      "members": {}
    },
    "EntryMode": {
      "type": "string",
      "enum": [
        "OPEN_DOOR",
        "CLOSED_DOOR"
      ]
    },
    "EnabledConsoles": {
      "type": "list",
      "member": {
        "shape": "StandardLengthString"
      }
    },
    "EntryTypeConfig": {
      "type": "structure",
      "required": [
        "InvitationEntryType"
      ],
      "members": {
        "InvitationEntryType": {
          "shape": "StandardLengthString"
        },
        "RacingDivisionEntryType": {
          "shape": "StandardLengthString"
        }
      }
    },
    "EpisodeStatus": {
      "type": "string",
      "max": 64,
      "min": 1
    },
    "ErrorCode": {
      "type": "string",
      "min": 1
    },
    "ErrorDetails": {
      "type": "structure",
      "required": [
        "Type",
        "Message"
      ],
      "members": {
        "Type": {
          "shape": "TestRewardFunctionErrorType"
        },
        "Message": {
          "shape": "Message"
        },
        "Line": {
          "shape": "StandardLengthString"
        },
        "LineNumber": {
          "shape": "PositiveInteger"
        }
      }
    },
    "ErrorDetailsList": {
      "type": "list",
      "member": {
        "shape": "ErrorDetails"
      }
    },
    "EvaluationConfig": {
      "type": "structure",
      "required": [
        "TrackArn",
        "TerminationConditions"
      ],
      "members": {
        "TrackArn": {
          "shape": "TrackArn"
        },
        "TrackFeatures": {
          "shape": "TrackFeatures"
        },
        "TerminationConditions": {
          "shape": "EvaluationTerminationConditions"
        },
        "RaceType": {
          "shape": "RaceType"
        },
        "HeadToHeadConfig": {
          "shape": "HeadToHeadConfig"
        },
        "ObjectAvoidanceConfig": {
          "shape": "ObjectAvoidanceConfig"
        },
        "ResettingBehaviorConfig": {
          "shape": "ResettingBehaviourConfig"
        },
        "EvaluationName": {
          "shape": "StandardLengthString"
        }
      }
    },
    "EvaluationJob": {
      "type": "structure",
      "required": [
        "JobArn",
        "ActivityJob",
        "Config",
        "Metrics"
      ],
      "members": {
        "JobArn": {
          "shape": "EvaluationJobArn"
        },
        "ActivityJob": {
          "shape": "ActivityJob"
        },
        "Config": {
          "shape": "EvaluationConfig"
        },
        "Metrics": {
          "shape": "EvaluationMetrics"
        },
        "RoboMakerJobArn": {
          "shape": "Arn"
        },
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "EvaluationJobArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "^arn:aws:deepracer:[a-z0-9-]*:[0-9]{12}:evaluation_job/[a-zA-Z0-9_\\-]+$"
    },
    "EvaluationJobList": {
      "type": "list",
      "member": {
        "shape": "EvaluationJob"
      }
    },
    "EvaluationMetric": {
      "type": "structure",
      "members": {
        "Trial": {
          "shape": "integer"
        },
        "ElapsedTimeInMilliseconds": {
          "shape": "integer"
        },
        "CompletionPercentage": {
          "shape": "integer"
        },
        "EpisodeStatus": {
          "shape": "EpisodeStatus"
        },
        "ResetCount": {
          "shape": "integer"
        },
        "OffTrackCount": {
          "shape": "integer"
        },
        "CrashCount": {
          "shape": "integer"
        }
      }
    },
    "EvaluationMetrics": {
      "type": "list",
      "member": {
        "shape": "EvaluationMetric"
      }
    },
    "EvaluationTerminationConditions": {
      "type": "structure",
      "members": {
        "MaxTimeInMinutes": {
          "shape": "integer"
        },
        "MaxLaps": {
          "shape": "integer"
        }
      }
    },
    "EventResourceConfig": {
      "type": "structure",
      "required": [
        "Type",
        "Urls"
      ],
      "members": {
        "Type": {
          "shape": "StandardLengthString"
        },
        "Metadata": {
          "shape": "StandardLengthString"
        },
        "Urls": {
          "shape": "ResourceUrls"
        },
        "ResourceArn": {
          "shape": "Arn"
        }
      }
    },
    "EventResourcesConfigs": {
      "type": "list",
      "member": {
        "shape": "EventResourceConfig"
      }
    },
    "EventSchedule": {
      "type": "structure",
      "required": [
        "StartTime",
        "EndTime"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "Arn"
        },
        "StartTime": {
          "shape": "long"
        },
        "EndTime": {
          "shape": "long"
        }
      }
    },
    "EventScheduleList": {
      "type": "list",
      "member": {
        "shape": "EventSchedule"
      }
    },
    "Eyes": {
      "type": "string",
      "enum": [
        "Close",
        "Cry",
        "Default",
        "EyeRoll",
        "Happy",
        "Hearts",
        "Side",
        "Squint",
        "Surprised",
        "Wink",
        "WinkWacky"
      ]
    },
    "Eyebrows": {
      "type": "string",
      "enum": [
        "Angry",
        "AngryNatural",
        "SadConcerned",
        "SadConcernedNatural",
        "RaisedExcited",
        "RaisedExcitedNatural",
        "DefaultNatural",
        "Default",
        "FlatNatural",
        "UpDown",
        "UpDownNatural",
        "UnibrowNatural"
      ]
    },
    "FacialHair": {
      "type": "string",
      "enum": [
        "Blank",
        "BeardMajestic",
        "BeardMedium",
        "MoustacheFancy",
        "BeardLight",
        "MoustacheMagnum"
      ]
    },
    "FacialHairColor": {
      "type": "string",
      "enum": [
        "Red",
        "Black",
        "BlondeGolden",
        "Blonde",
        "Platinum",
        "Auburn",
        "Brown",
        "BrownDark"
      ]
    },
    "Features": {
      "type": "structure",
      "members": {
        "Theme": {
          "shape": "ThemeConfig"
        },
        "RacingDivisionEnabled": {
          "shape": "boolean"
        },
        "Playoff": {
          "shape": "PlayoffFeature"
        },
        "AttachedRewards": {
          "shape": "AttachedRewards"
        },
        "CountryStatsEnabled": {
          "shape": "boolean"
        }
      }
    },
    "GetAccountConfigRequest": {
      "type": "structure",
      "members": {}
    },
    "GetAccountConfigResponse": {
      "type": "structure",
      "required": [
        "MultiRacer"
      ],
      "members": {
        "MultiRacer": {
          "shape": "boolean"
        }
      }
    },
    "GetAliasResponse": {
      "type": "structure",
      "members": {
        "Alias": {
          "shape": "Alias"
        },
        "TeamName": {
          "shape": "StandardLengthString"
        },
        "RacingDivisionsByRaceType": {
          "shape": "RacingDivisionsByRaceType"
        },
        "RacingDivisionConfig": {
          "shape": "RacingDivisionConfig"
        },
        "Rewards": {
          "shape": "Rewards"
        },
        "UserAvatarConfig": {
          "shape": "AvatarConfig"
        },
        "FirstRaceTime": {
          "shape": "long"
        },
        "MultiUserEnabled": {
          "shape": "boolean"
        },
        "MultiUserProfile": {
          "shape": "MultiUserProfile"
        },
        "AlternativeEmail": {
          "shape": "StandardLengthString"
        },
        "CompetitionCountryCode": {
          "shape": "CountryCode"
        },
        "FirstName": {
          "shape": "StandardLengthString"
        },
        "MiddleName": {
          "shape": "StandardLengthString"
        },
        "LastName": {
          "shape": "StandardLengthString"
        },
        "UserId": {
          "shape": "StandardLengthString"
        },
        "ProfileId": {
          "shape": "StandardLengthString"
        }
      }
    },
    "GetAssetUrlRequest": {
      "type": "structure",
      "required": [
        "Arn",
        "AssetType"
      ],
      "members": {
        "Arn": {
          "shape": "Arn"
        },
        "AssetType": {
          "shape": "AssetType"
        },
        "RoleArn": {
          "shape": "RoleArn",
          "documentation": "<p>An Arn of a role that current user has assigned, which write files to that bucket</p>"
        },
        "ModelArtifactsS3Bucket": {
          "shape": "S3Bucket"
        },
        "ModelArtifactsS3Prefix": {
          "shape": "S3ObjectKey"
        },
        "FirstCopy": {
          "shape": "boolean"
        }
      }
    },
    "GetAssetUrlResponse": {
      "type": "structure",
      "members": {
        "Url": {
          "shape": "Url"
        },
        "ProcessedFileCount": {
          "shape": "integer"
        }
      }
    },
    "GetBYOAJobRequest": {
      "type": "structure",
      "required": [
        "BYOAJobArn"
      ],
      "members": {
        "BYOAJobArn": {
          "shape": "Arn"
        }
      }
    },
    "GetBYOAJobResponse": {
      "type": "structure",
      "required": [
        "BYOAJob"
      ],
      "members": {
        "BYOAJob": {
          "shape": "BYOAJob"
        }
      }
    },
    "GetCarRequest": {
      "type": "structure",
      "required": [
        "Arn"
      ],
      "members": {
        "Arn": {
          "shape": "CarArn"
        }
      }
    },
    "GetCarResponse": {
      "type": "structure",
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "GetCarsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        }
      }
    },
    "GetCarsResponse": {
      "type": "structure",
      "members": {
        "Cars": {
          "shape": "CarsList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "GetConflictingEventSchedulesRequest": {
      "type": "structure",
      "members": {
        "StartTime": {
          "shape": "long"
        },
        "EndTime": {
          "shape": "long"
        }
      }
    },
    "GetConflictingEventSchedulesResponse": {
      "type": "structure",
      "members": {
        "EventScheduleList": {
          "shape": "EventScheduleList"
        }
      }
    },
    "GetEvaluationRequest": {
      "type": "structure",
      "required": [
        "EvaluationJobArn"
      ],
      "members": {
        "EvaluationJobArn": {
          "shape": "EvaluationJobArn"
        }
      }
    },
    "GetEvaluationResponse": {
      "type": "structure",
      "required": [
        "EvaluationJob"
      ],
      "members": {
        "EvaluationJob": {
          "shape": "EvaluationJob"
        }
      }
    },
    "GetLatestUserSubmissionRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetLatestUserSubmissionResponse": {
      "type": "structure",
      "required": [
        "LeaderboardSubmission"
      ],
      "members": {
        "LeaderboardSubmission": {
          "shape": "LeaderboardSubmission"
        }
      }
    },
    "GetLeaderboardRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetLeaderboardResponse": {
      "type": "structure",
      "members": {
        "Leaderboard": {
          "shape": "Leaderboard"
        }
      }
    },
    "GetModelRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "GetModelResponse": {
      "type": "structure",
      "required": [
        "Model"
      ],
      "members": {
        "Model": {
          "shape": "Model"
        }
      }
    },
    "GetRankedUserSubmissionRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetRankedUserSubmissionResponse": {
      "type": "structure",
      "required": [
        "LeaderboardSubmission"
      ],
      "members": {
        "LeaderboardSubmission": {
          "shape": "LeaderboardSubmission"
        }
      }
    },
    "GetRecordsResponse": {
      "type": "structure",
      "members": {
        "TrackRecords": {
          "shape": "TrackRecordList"
        }
      }
    },
    "GetTournamentRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetTournamentResponse": {
      "type": "structure",
      "required": [
        "Tournament"
      ],
      "members": {
        "TournamentStatus": {
          "shape": "TournamentStatus"
        },
        "Tournament": {
          "shape": "TournamentResults"
        }
      }
    },
    "GetTrackRequest": {
      "type": "structure",
      "required": [
        "TrackArn"
      ],
      "members": {
        "TrackArn": {
          "shape": "TrackArn"
        }
      }
    },
    "GetTrackResponse": {
      "type": "structure",
      "required": [
        "Track"
      ],
      "members": {
        "Track": {
          "shape": "Track"
        }
      }
    },
    "GetTrainingJobRequest": {
      "type": "structure",
      "required": [
        "TrainingJobArn"
      ],
      "members": {
        "TrainingJobArn": {
          "shape": "TrainingJobArn"
        }
      }
    },
    "GetTrainingJobResponse": {
      "type": "structure",
      "required": [
        "TrainingJob"
      ],
      "members": {
        "TrainingJob": {
          "shape": "TrainingJob"
        }
      }
    },
    "GrandPrix": {
      "type": "structure",
      "required": [
        "RaceArn",
        "ResultReleaseTime"
      ],
      "members": {
        "RaceArn": {
          "shape": "Arn"
        },
        "ResultReleaseTime": {
          "shape": "long"
        }
      }
    },
    "HairColor": {
      "type": "string",
      "enum": [
        "Red",
        "PastelPink",
        "SilverGray",
        "Black",
        "BlondeGolden",
        "Blonde",
        "Platinum",
        "Auburn",
        "Brown",
        "BrownDark"
      ]
    },
    "HatColor": {
      "type": "string",
      "enum": [
        "Blue01",
        "Blue02",
        "Blue03",
        "Pink",
        "Red",
        "PastelBlue",
        "PastelGreen",
        "PastelOrange",
        "PastelRed",
        "PastelYellow",
        "Gray01",
        "Gray02",
        "Heather",
        "Black",
        "White"
      ]
    },
    "HeadToHeadConfig": {
      "type": "structure",
      "required": [
        "HeadToHeadType"
      ],
      "members": {
        "HeadToHeadType": {
          "shape": "HeadToHeadType"
        },
        "PolicyModelArn": {
          "shape": "ModelArn"
        },
        "PolicyModelName": {
          "shape": "StandardLengthString"
        },
        "NumBotCars": {
          "shape": "integer"
        },
        "BotCarSpeed": {
          "shape": "double"
        },
        "EnableLaneChange": {
          "shape": "boolean"
        },
        "LowerLaneChangeTime": {
          "shape": "double"
        },
        "UpperLaneChangeTime": {
          "shape": "double"
        },
        "NumObstacles": {
          "shape": "integer"
        },
        "ObstaclePositions": {
          "shape": "ObstaclePositionList"
        },
        "ObstacleType": {
          "shape": "ObstacleType"
        },
        "RandomizeLocation": {
          "shape": "boolean"
        }
      }
    },
    "HeadToHeadType": {
      "type": "string",
      "enum": [
        "POLICY_DRIVEN_VEHICLE",
        "BOT_VEHICLE"
      ]
    },
    "ImportModelRequest": {
      "type": "structure",
      "required": [
        "Type",
        "Name",
        "ModelArtifactsS3Path",
        "RoleArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "Type": {
          "shape": "ModelType",
          "documentation": "<p>Type of model to import</p>"
        },
        "Name": {
          "shape": "ModelName",
          "documentation": "<p>A name to be given to imported model</p>"
        },
        "Description": {
          "shape": "Description",
          "documentation": "<p>A description of the imported model</p>"
        },
        "ModelArtifactsS3Path": {
          "shape": "S3ObjectKey",
          "documentation": "<p>Path to model in that bucket</p>"
        },
        "RoleArn": {
          "shape": "RoleArn",
          "documentation": "<p>An Arn of a role that current user has assigned, which allows to fetch files from that bucket</p>"
        },
        "TargetUserId": {
          "shape": "StandardLengthString"
        }
      }
    },
    "ImportModelResponse": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "Leaderboard": {
      "type": "structure",
      "required": [
        "Arn",
        "Name",
        "Description",
        "LaunchTime",
        "CloseTime",
        "Status",
        "MinimumLaps",
        "ParticipantCount"
      ],
      "members": {
        "Arn": {
          "shape": "LeaderboardArn"
        },
        "Name": {
          "shape": "LeaderboardName"
        },
        "Description": {
          "shape": "Description"
        },
        "LaunchTime": {
          "shape": "epochTimeMillis"
        },
        "CloseTime": {
          "shape": "epochTimeMillis"
        },
        "StartTime": {
          "shape": "epochTimeMillis"
        },
        "EndTime": {
          "shape": "epochTimeMillis"
        },
        "TrackArn": {
          "shape": "TrackArn"
        },
        "TrackFeatures": {
          "shape": "TrackFeatures"
        },
        "Status": {
          "shape": "LeaderboardStatus"
        },
        "MinimumLaps": {
          "shape": "integer"
        },
        "TotalLaps": {
          "shape": "integer"
        },
        "ParticipantCount": {
          "shape": "integer"
        },
        "HeadToHeadConfig": {
          "shape": "HeadToHeadConfig"
        },
        "ObjectAvoidanceConfig": {
          "shape": "ObjectAvoidanceConfig"
        },
        "ResettingBehaviorConfig": {
          "shape": "ResettingBehaviourConfig"
        },
        "RaceType": {
          "shape": "RaceType"
        },
        "Visibility": {
          "shape": "StandardLengthString"
        },
        "Tournament": {
          "shape": "Tournament"
        },
        "TerminationConditions": {
          "shape": "EvaluationTerminationConditions"
        },
        "TimingMethod": {
          "shape": "TimingMethod"
        },
        "TermsConditionId": {
          "shape": "TermsConditionId"
        },
        "TermsAccepted": {
          "shape": "boolean"
        },
        "WinnerAlias": {
          "shape": "Alias"
        },
        "LeagueType": {
          "shape": "StandardLengthString"
        },
        "PlayoffRaceTypeConfig": {
          "shape": "PlayoffRaceTypeConfig"
        },
        "ThemeConfig": {
          "shape": "ThemeConfig"
        },
        "NumOfTeamSubmissionsRequired": {
          "shape": "integer"
        },
        "WinningTeamName": {
          "shape": "StandardLengthString"
        },
        "RacingDivisionEnabled": {
          "shape": "boolean"
        },
        "RacingDivision": {
          "shape": "Division"
        },
        "Tags": {
          "shape": "StandardLengthString"
        },
        "AccessToken": {
          "shape": "AccessToken"
        },
        "ParticipationConfig": {
          "shape": "ParticipationConfig"
        },
        "CarControlConfig": {
          "shape": "CarControlConfig"
        },
        "Moderated": {
          "shape": "boolean"
        },
        "ModerateConfig": {
          "shape": "ModerateConfig"
        },
        "EventResourceConfig": {
          "shape": "ResourceConfig"
        },
        "LeaderboardAccessRoles": {
          "shape": "LeaderboardAccessRoles"
        },
        "AttachedRewards": {
          "shape": "AttachedRewards"
        },
        "SubmissionsPerUser": {
          "shape": "integer"
        },
        "CountryStatsEnabled": {
          "shape": "boolean"
        }
      }
    },
    "LeaderboardAccessRole": {
      "type": "string"
    },
    "LeaderboardAccessRoles": {
      "type": "list",
      "member": {
        "shape": "LeaderboardAccessRole"
      }
    },
    "LeaderboardArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "arn:.*"
    },
    "LeaderboardDefinition": {
      "type": "structure",
      "required": [
        "Name",
        "Visibility",
        "LaunchTime",
        "CloseTime",
        "TrackArn",
        "LeagueType"
      ],
      "members": {
        "Name": {
          "shape": "LeaderboardName"
        },
        "Description": {
          "shape": "Description"
        },
        "Visibility": {
          "shape": "StandardLengthString"
        },
        "LaunchTime": {
          "shape": "long"
        },
        "CloseTime": {
          "shape": "long"
        },
        "TrackArn": {
          "shape": "Arn"
        },
        "TrackFeatures": {
          "shape": "TrackFeatures"
        },
        "Division": {
          "shape": "Division"
        },
        "LeagueType": {
          "shape": "StandardLengthString"
        },
        "Tags": {
          "shape": "StandardLengthString"
        },
        "TermsConditionId": {
          "shape": "TermsConditionId"
        }
      }
    },
    "LeaderboardList": {
      "type": "list",
      "member": {
        "shape": "Leaderboard"
      }
    },
    "LeaderboardName": {
      "type": "string",
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "LeaderboardStatus": {
      "type": "string",
      "enum": [
        "UPCOMING",
        "OPEN",
        "CLOSED"
      ]
    },
    "LeaderboardSubmission": {
      "type": "structure",
      "members": {
        "ActivityArn": {
          "shape": "Arn"
        },
        "Alias": {
          "shape": "Alias"
        },
        "UserAvatarConfig": {
          "shape": "AvatarConfig"
        },
        "CountryCode": {
          "shape": "CountryCode"
        },
        "SubmissionTime": {
          "shape": "long"
        },
        "LapCount": {
          "shape": "integer"
        },
        "AvgLapTime": {
          "shape": "long"
        },
        "BestLapTime": {
          "shape": "long"
        },
        "TotalLapTime": {
          "shape": "long"
        },
        "AvgResets": {
          "shape": "double"
        },
        "CollisionCount": {
          "shape": "integer"
        },
        "OffTrackCount": {
          "shape": "integer"
        },
        "ResetCount": {
          "shape": "integer"
        },
        "SubmissionCount": {
          "shape": "integer"
        },
        "SubmissionVideoS3path": {
          "shape": "Url"
        },
        "RankingScore": {
          "shape": "long"
        },
        "Rank": {
          "shape": "integer"
        },
        "LeagueRanks": {
          "shape": "LeagueRanks"
        },
        "ModelArn": {
          "shape": "ModelArn"
        },
        "ModelName": {
          "shape": "StandardLengthString"
        },
        "LeaderboardSubmissionStatusType": {
          "shape": "LeaderboardSubmissionStatusType"
        },
        "LogDownloadComplete": {
          "shape": "boolean"
        },
        "TeamName": {
          "shape": "StandardLengthString"
        },
        "RacingDivision": {
          "shape": "StandardLengthString"
        },
        "UserId": {
          "shape": "StandardLengthString"
        },
        "EventResourcesConfigs": {
          "shape": "EventResourcesConfigs"
        },
        "ClearedJob": {
          "shape": "boolean"
        }
      }
    },
    "LeaderboardSubmissionList": {
      "type": "list",
      "member": {
        "shape": "LeaderboardSubmission"
      }
    },
    "LeaderboardSubmissionStatusType": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "QUEUED",
        "RUNNING",
        "FAILED",
        "ERROR"
      ]
    },
    "LeagueRanks": {
      "type": "structure",
      "members": {
        "Global": {
          "shape": "integer"
        },
        "Region": {
          "shape": "integer"
        },
        "Country": {
          "shape": "integer"
        }
      }
    },
    "LeagueTopRacers": {
      "type": "structure",
      "members": {
        "Global": {
          "shape": "RacerSubmission"
        },
        "Region": {
          "shape": "RacerSubmission"
        },
        "Country": {
          "shape": "RacerSubmission"
        }
      }
    },
    "ListBYOAJobsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        },
        "StatusEquals": {
          "shape": "ActivityJobStatus"
        }
      }
    },
    "ListBYOAJobsResponse": {
      "type": "structure",
      "members": {
        "BYOAJobs": {
          "shape": "BYOAJobs"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListEvaluationsRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        },
        "SortBy": {
          "shape": "SortEvaluationsBy"
        },
        "SortOrder": {
          "shape": "ListSortOrder"
        },
        "StatusEquals": {
          "shape": "ActivityJobStatus"
        }
      }
    },
    "ListEvaluationsResponse": {
      "type": "structure",
      "members": {
        "EvaluationJobs": {
          "shape": "EvaluationJobList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListLeaderboardSubmissionsRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "GetTopRacer": {
          "shape": "boolean"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        }
      }
    },
    "ListLeaderboardSubmissionsResponse": {
      "type": "structure",
      "members": {
        "LeaderboardSubmissions": {
          "shape": "LeaderboardSubmissionList"
        },
        "LeagueTopRacers": {
          "shape": "LeagueTopRacers"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListLeaderboardWinnersRequest": {
      "type": "structure",
      "required": [
        "WinnerCutoffTime"
      ],
      "members": {
        "WinnerCutoffTime": {
          "shape": "epochTimeMillis"
        },
        "MaxResults": {
          "shape": "integer"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListLeaderboardWinnersResponse": {
      "type": "structure",
      "members": {
        "WinnerList": {
          "shape": "WinnerList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListLeaderboardsRequest": {
      "type": "structure",
      "members": {
        "LeagueType": {
          "shape": "StandardLengthString"
        },
        "LeaderboardAccessRoles": {
          "shape": "LeaderboardAccessRoles"
        },
        "CutoffTime": {
          "shape": "long"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        }
      }
    },
    "ListLeaderboardsResponse": {
      "type": "structure",
      "required": [
        "Leaderboards"
      ],
      "members": {
        "Leaderboards": {
          "shape": "LeaderboardList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListModelsRequest": {
      "type": "structure",
      "required": [
        "ModelType"
      ],
      "members": {
        "ModelType": {
          "shape": "ModelType"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        },
        "SortBy": {
          "shape": "SortModelsBy"
        },
        "SortOrder": {
          "shape": "ListSortOrder"
        }
      }
    },
    "ListModelsResponse": {
      "type": "structure",
      "members": {
        "Models": {
          "shape": "ModelList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListPrivateLeaderboardParticipantsRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "IncludeExtendedUserData": {
          "shape": "boolean"
        },
        "LeaderboardAccessRoles": {
          "shape": "LeaderboardAccessRoles"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        }
      }
    },
    "ListPrivateLeaderboardParticipantsResponse": {
      "type": "structure",
      "required": [
        "PrivateLeaderboardParticipants"
      ],
      "members": {
        "PrivateLeaderboardParticipants": {
          "shape": "PrivateLeaderboardParticipantList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListSortOrder": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "ListTagsForResourceRequest": {
      "type": "structure",
      "required": [
        "ResourceArn"
      ],
      "members": {
        "ResourceArn": {
          "shape": "Arn"
        }
      }
    },
    "ListTagsForResourceResponse": {
      "type": "structure",
      "members": {
        "Tags": {
          "shape": "Tags"
        }
      }
    },
    "ListTracksRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        }
      }
    },
    "ListTracksResponse": {
      "type": "structure",
      "members": {
        "Tracks": {
          "shape": "TrackList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListTrainingJobsRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "integer"
        }
      }
    },
    "ListTrainingJobsResponse": {
      "type": "structure",
      "members": {
        "TrainingJobs": {
          "shape": "TrainingJobList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "Live": {
      "type": "structure",
      "required": [
        "RaceArn"
      ],
      "members": {
        "RaceArn": {
          "shape": "Arn"
        }
      }
    },
    "Message": {
      "type": "string",
      "max": 2000,
      "min": 1
    },
    "MetaData": {
      "type": "string",
      "max": 100000,
      "min": 1
    },
    "Model": {
      "type": "structure",
      "required": [
        "ModelType",
        "ModelName",
        "ModelArn",
        "WasImported",
        "CreationTime",
        "ModelFramework",
        "AgentAlgorithm",
        "AgentNetwork",
        "Status"
      ],
      "members": {
        "ModelType": {
          "shape": "ModelType"
        },
        "ModelName": {
          "shape": "ModelName"
        },
        "ModelArn": {
          "shape": "ModelArn"
        },
        "ModelDescription": {
          "shape": "Description"
        },
        "WasImported": {
          "shape": "boolean"
        },
        "WasMigrated": {
          "shape": "boolean"
        },
        "CreatedInDataAccount": {
          "shape": "boolean"
        },
        "CreationTime": {
          "shape": "epochTimeMillis"
        },
        "ModelFramework": {
          "shape": "ModelFramework"
        },
        "ModelArtifactS3Location": {
          "shape": "S3Bucket"
        },
        "AgentAlgorithm": {
          "shape": "AgentAlgorithm"
        },
        "AgentNetwork": {
          "shape": "AgentNetwork"
        },
        "Status": {
          "shape": "ModelStatus"
        },
        "CarArn": {
          "shape": "CarArn"
        },
        "CarConfiguration": {
          "shape": "CarConfiguration"
        },
        "Error": {
          "shape": "ModelError"
        },
        "ModelPackagingComplete": {
          "shape": "boolean"
        },
        "ImportModelS3SrcLocation": {
          "shape": "StandardLengthString"
        },
        "ModelSizeInGb": {
          "shape": "double"
        },
        "CreatedByAlias": {
          "shape": "Alias"
        }
      }
    },
    "ModelArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "^arn:aws:deepracer:[a-z0-9-]*:[0-9]{12}:model/reinforcement_learning/[a-zA-Z0-9\\-]+$"
    },
    "ModelArnList": {
      "type": "list",
      "member": {
        "shape": "ModelArn"
      }
    },
    "ModelError": {
      "type": "structure",
      "members": {
        "ErrorCode": {
          "shape": "ErrorCode"
        },
        "Details": {
          "shape": "Details"
        }
      }
    },
    "ModelFramework": {
      "type": "string",
      "enum": [
        "TENSOR_FLOW"
      ]
    },
    "ModelList": {
      "type": "list",
      "member": {
        "shape": "Model"
      }
    },
    "ModelName": {
      "type": "string",
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "ModelStatus": {
      "type": "string",
      "enum": [
        "CREATED",
        "TRAINING",
        "READY",
        "DELETING",
        "ERROR",
        "EVALUATING",
        "STOPPING",
        "IMPORTING",
        "MIGRATING",
        "IMPORT_ERROR",
        "MIGRATE_ERROR"
      ]
    },
    "ModelType": {
      "type": "string",
      "enum": [
        "REINFORCEMENT_LEARNING"
      ]
    },
    "ModerateConfig": {
      "type": "structure",
      "required": [
        "RacersSubmissions"
      ],
      "members": {
        "RacersSubmissions": {
          "shape": "ModerateConfigRacersSubmissions"
        },
        "EntryMode": {
          "shape": "StandardLengthString"
        }
      }
    },
    "ModerateConfigRacersSubmission": {
      "type": "structure",
      "required": [
        "UserId",
        "Alias",
        "SubmissionStatus"
      ],
      "members": {
        "UserId": {
          "shape": "StandardLengthString"
        },
        "Alias": {
          "shape": "Alias"
        },
        "ModelArn": {
          "shape": "Arn"
        },
        "SubmissionStatus": {
          "shape": "StandardLengthString"
        },
        "SubmissionTime": {
          "shape": "long"
        },
        "EvaluationCompletedTime": {
          "shape": "long"
        },
        "EvaluationStartTime": {
          "shape": "long"
        },
        "UserIndex": {
          "shape": "long"
        },
        "ClearedJob": {
          "shape": "boolean"
        }
      }
    },
    "ModerateConfigRacersSubmissions": {
      "type": "list",
      "member": {
        "shape": "ModerateConfigRacersSubmission"
      }
    },
    "Mouth": {
      "type": "string",
      "enum": [
        "Concerned",
        "Default",
        "Disbelief",
        "Eating",
        "Grimace",
        "Sad",
        "ScreamOpen",
        "Serious",
        "Smile",
        "Tongue",
        "Twinkle"
      ]
    },
    "MultiracerConfig": {
      "type": "structure",
      "required": [
        "MultiracerModeEnabled"
      ],
      "members": {
        "MultiracerModeEnabled": {
          "shape": "boolean"
        }
      }
    },
    "MultiUserProfile": {
      "type": "structure",
      "required": [
        "AssociatedOn",
        "ComputeMinutesUsed",
        "ComputeMinutesQueued",
        "MaxTotalComputeMinutes",
        "MaxModels",
        "StorageBytesUsed",
        "UserState"
      ],
      "members": {
        "AssociatedOn": {
          "shape": "long"
        },
        "ComputeMinutesUsed": {
          "shape": "integer"
        },
        "ComputeMinutesQueued": {
          "shape": "integer"
        },
        "MaxTotalComputeMinutes": {
          "shape": "integer"
        },
        "MaxModels": {
          "shape": "integer"
        },
        "StorageBytesUsed": {
          "shape": "long"
        },
        "UserState": {
          "shape": "UserState"
        }
      }
    },
    "Name": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "NeuralNetwork": {
      "type": "string",
      "enum": [
        "DEEP_CONVOLUTIONAL_NETWORK",
        "DEEP_CONVOLUTIONAL_NETWORK_SHALLOW"
      ]
    },
    "NextToken": {
      "type": "string",
      "max": 2000,
      "min": 1,
      "pattern": "^[a-zA-Z0-9+/]+={0,2}$"
    },
    "NonNegativeDouble": {
      "type": "double",
      "min": 0
    },
    "NonNegativeInteger": {
      "type": "integer",
      "min": 0
    },
    "ObjectAvoidanceConfig": {
      "type": "structure",
      "required": [
        "NumObstacles",
        "ObstacleType",
        "RandomizeLocation"
      ],
      "members": {
        "NumObstacles": {
          "shape": "integer"
        },
        "ObstaclePositions": {
          "shape": "ObstaclePositionList"
        },
        "ObstacleType": {
          "shape": "ObstacleType"
        },
        "RandomizeLocation": {
          "shape": "boolean"
        }
      }
    },
    "ObstaclePositionList": {
      "type": "list",
      "member": {
        "shape": "ObstaclePosition"
      }
    },
    "ObstaclePosition": {
      "type": "structure",
      "required": [
        "LaneNumber",
        "TrackPercentage"
      ],
      "members": {
        "LaneNumber": {
          "shape": "NonNegativeInteger"
        },
        "TrackPercentage": {
          "shape": "NonNegativeDouble"
        }
      }
    },
    "ObstacleType": {
      "type": "string",
      "enum": [
        "BOX"
      ]
    },
    "ParticipationConfig": {
      "type": "structure",
      "required": [
        "EntryTypeConfig",
        "ViewType"
      ],
      "members": {
        "EntryTypeConfig": {
          "shape": "EntryTypeConfig"
        },
        "ViewType": {
          "shape": "StandardLengthString"
        }
      }
    },
    "PerformLeaderboardOperationRequest": {
      "type": "structure",
      "required": [
        "Operation"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "Arn"
        },
        "Operation": {
          "shape": "StandardLengthString"
        },
        "UserIds": {
          "shape": "UserIds"
        },
        "EntryMode": {
          "shape": "EntryMode"
        },
        "NumberOfBackupResources": {
          "shape": "integer"
        },
        "ResourceIds": {
          "shape": "ResourceIds"
        },
        "ReLaunch": {
          "shape": "boolean"
        },
        "GetConflictingEventSchedulesRequest": {
          "shape": "GetConflictingEventSchedulesRequest"
        }
      }
    },
    "PerformLeaderboardOperationResponse": {
      "type": "structure",
      "members": {
        "GetConflictingEventSchedulesResponse": {
          "shape": "GetConflictingEventSchedulesResponse"
        }
      }
    },
    "PerspectiveCustomization": {
      "type": "structure",
      "members": {
        "Decal": {
          "shape": "CarDecal"
        }
      }
    },
    "PlayoffFeature": {
      "type": "structure",
      "required": [
        "PlayoffType"
      ],
      "members": {
        "PlayoffType": {
          "shape": "StandardLengthString"
        },
        "LaunchTime": {
          "shape": "long"
        },
        "GrandPrix": {
          "shape": "GrandPrix"
        },
        "Tournament": {
          "shape": "Tournament"
        },
        "Live": {
          "shape": "Live"
        }
      }
    },
    "PlayoffRaceTypeConfig": {
      "type": "structure",
      "members": {
        "PlayoffRaceTypeID": {
          "shape": "StandardLengthString"
        },
        "PlayoffRaceArn": {
          "shape": "Arn"
        },
        "PlayoffReleaseTime": {
          "shape": "long"
        },
        "PlayoffResultReleaseTime": {
          "shape": "long"
        }
      }
    },
    "PositiveInteger": {
      "type": "integer",
      "min": 1
    },
    "PreprocessType": {
      "type": "string"
    },
    "PrivateLeaderboardParticipant": {
      "type": "structure",
      "members": {
        "AccountId": {
          "shape": "AccountId"
        },
        "UserId": {
          "shape": "StandardLengthString"
        },
        "Alias": {
          "shape": "Alias"
        },
        "JoinTime": {
          "shape": "long"
        },
        "UserAvatarConfig": {
          "shape": "AvatarConfig"
        }
      }
    },
    "PrivateLeaderboardParticipantList": {
      "type": "list",
      "member": {
        "shape": "PrivateLeaderboardParticipant"
      }
    },
    "Race": {
      "type": "structure",
      "members": {
        "Racer1": {
          "shape": "RacerStatistics"
        },
        "Racer2": {
          "shape": "RacerStatistics"
        },
        "Winner": {
          "shape": "Alias"
        },
        "ResultsAvailableTime": {
          "shape": "epochTimeMillis"
        },
        "VideoUrl": {
          "shape": "Url"
        },
        "RaceGroup": {
          "shape": "NonNegativeInteger"
        }
      }
    },
    "RaceConfig": {
      "type": "structure",
      "required": [
        "MinimumLaps",
        "RaceTypeConfig",
        "ResettingBehavior",
        "TerminationConditions",
        "TimingMethod"
      ],
      "members": {
        "MinimumLaps": {
          "shape": "integer"
        },
        "RaceTypeConfig": {
          "shape": "RaceTypeConfig"
        },
        "ResettingBehavior": {
          "shape": "ResettingBehaviourConfig"
        },
        "TerminationConditions": {
          "shape": "EvaluationTerminationConditions"
        },
        "TimingMethod": {
          "shape": "TimingMethod"
        },
        "ParticipationConfig": {
          "shape": "ParticipationConfig"
        },
        "CarControlConfig": {
          "shape": "CarControlConfig"
        },
        "Moderated": {
          "shape": "boolean"
        },
        "SubmissionsPerUser": {
          "shape": "integer"
        }
      }
    },
    "RaceList": {
      "type": "list",
      "member": {
        "shape": "Race"
      }
    },
    "RaceType": {
      "type": "string",
      "enum": [
        "TIME_TRIAL",
        "OBJECT_AVOIDANCE",
        "HEAD_TO_HEAD_RACING"
      ]
    },
    "RaceTypeConfig": {
      "type": "structure",
      "required": [
        "RaceType"
      ],
      "members": {
        "RaceType": {
          "shape": "RaceType"
        },
        "TimeTrial": {
          "shape": "TimeTrial"
        },
        "ObjectAvoidance": {
          "shape": "ObjectAvoidanceConfig"
        },
        "HeadToHead": {
          "shape": "HeadToHeadConfig"
        }
      }
    },
    "RacerStatistics": {
      "type": "structure",
      "members": {
        "Alias": {
          "shape": "Alias"
        },
        "CrashCount": {
          "shape": "integer"
        },
        "OffTrackCount": {
          "shape": "integer"
        },
        "TimeTakenMillis": {
          "shape": "long"
        },
        "VideoUrl": {
          "shape": "Url"
        },
        "SeedNumber": {
          "shape": "integer"
        }
      }
    },
    "RacerSubmission": {
      "type": "structure",
      "members": {
        "TopRacer": {
          "shape": "LeaderboardSubmission"
        },
        "TotalParticipants": {
          "shape": "integer"
        }
      }
    },
    "RacingDivisionsByRaceType": {
      "type": "structure",
      "members": {
        "TimeTrialRacingDivision": {
          "shape": "Division"
        },
        "ObjectAvoidanceRacingDivision": {
          "shape": "Division"
        },
        "H2hRacingDivision": {
          "shape": "Division"
        }
      }
    },
    "RacingDivisionConfig": {
      "type": "structure",
      "members": {
        "RacingDivision": {
          "shape": "Division"
        },
        "StartTime": {
          "shape": "long"
        },
        "EndTime": {
          "shape": "long"
        }
      }
    },
    "Ranking": {
      "type": "structure",
      "members": {
        "ItemName": {
          "shape": "StandardLengthString"
        },
        "RankingValue": {
          "shape": "long"
        },
        "MediaLink": {
          "shape": "StandardLengthString"
        },
        "UserAvatarConfig": {
          "shape": "AvatarConfig"
        }
      }
    },
    "RankingList": {
      "type": "list",
      "member": {
        "shape": "Ranking"
      }
    },
    "RemoveLeaderboardAccessPermissionRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "AccountId": {
          "shape": "AccountId"
        },
        "UserId": {
          "shape": "StandardLengthString"
        }
      }
    },
    "RemoveLeaderboardAccessPermissionResponse": {
      "type": "structure",
      "members": {}
    },
    "ResettingBehaviourConfig": {
      "type": "structure",
      "members": {
        "IsContinuousLap": {
          "shape": "boolean"
        },
        "AllowReset": {
          "shape": "boolean"
        },
        "MaxResetTimes": {
          "shape": "integer"
        },
        "PenaltySeconds": {
          "shape": "integer"
        },
        "CutOffSeconds": {
          "shape": "integer"
        },
        "CollisionPenaltySeconds": {
          "shape": "double"
        },
        "OffTrackPenaltySeconds": {
          "shape": "double"
        }
      }
    },
    "ResourceConfig": {
      "type": "structure",
      "required": [
        "ResourceId",
        "ResourceStatus"
      ],
      "members": {
        "ResourceId": {
          "shape": "StandardLengthString"
        },
        "ResourceStatus": {
          "shape": "StandardLengthString"
        },
        "ResourceCreationTime": {
          "shape": "long"
        },
        "ResourceFailoverTime": {
          "shape": "long"
        }
      }
    },
    "ResourceIds": {
      "type": "list",
      "member": {
        "shape": "StandardLengthString"
      }
    },
    "ResourceUrl": {
      "type": "structure",
      "members": {
        "Protocol": {
          "shape": "StandardLengthString"
        },
        "Endpoint": {
          "shape": "StandardLengthString"
        },
        "Expiry": {
          "shape": "integer"
        }
      }
    },
    "ResourceUrls": {
      "type": "list",
      "member": {
        "shape": "ResourceUrl"
      }
    },
    "ResultsReleaseTimes": {
      "type": "list",
      "member": {
        "shape": "epochTimeMillis"
      }
    },
    "RewardFunctionCode": {
      "type": "string",
      "max": 140000,
      "min": 1,
      "pattern": "[\\s\\S]+"
    },
    "Reward": {
      "type": "structure",
      "members": {
        "RewardId": {
          "shape": "StandardLengthString"
        },
        "RewardName": {
          "shape": "StandardLengthString"
        },
        "RewardDescription": {
          "shape": "StandardLengthString"
        },
        "Type": {
          "shape": "StandardLengthString"
        },
        "Context": {
          "shape": "RewardContext"
        },
        "AwardedTime": {
          "shape": "long"
        }
      }
    },
    "RewardContext": {
      "type": "structure",
      "members": {
        "Leaderboard": {
          "shape": "Leaderboard"
        },
        "CountryCode": {
          "shape": "CountryCode"
        }
      }
    },
    "Rewards": {
      "type": "list",
      "member": {
        "shape": "Reward"
      }
    },
    "RoleArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "arn:aws(-iso)?:iam::[0-9]{12}:role/(service-role/)?[a-zA-Z0-9_\\+=,\\.\\-@]{1,64}"
    },
    "RunTournamentRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "TournamentRacersOverride": {
          "shape": "TournamentRacersOverride"
        },
        "TournamentConfig": {
          "shape": "TournamentConfig"
        }
      }
    },
    "RunTournamentResponse": {
      "type": "structure",
      "members": {}
    },
    "S3Bucket": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^.+$"
    },
    "S3ObjectKey": {
      "type": "string",
      "min": 1
    },
    "SensorType": {
      "type": "string",
      "enum": [
        "FRONT_FACING_CAMERA",
        "STEREO_CAMERAS",
        "LIDAR"
      ]
    },
    "SensorsList": {
      "type": "list",
      "member": {
        "shape": "SensorType"
      }
    },
    "SetAliasRequest": {
      "type": "structure",
      "members": {
        "Alias": {
          "shape": "Alias"
        },
        "UserAvatarConfig": {
          "shape": "AvatarConfig"
        },
        "AlternativeEmail": {
          "shape": "StandardLengthString"
        },
        "CompetitionCountryCode": {
          "shape": "StandardLengthString"
        },
        "FirstName": {
          "shape": "StandardLengthString"
        },
        "MiddleName": {
          "shape": "StandardLengthString"
        },
        "LastName": {
          "shape": "StandardLengthString"
        }
      }
    },
    "SkinColor": {
      "type": "string",
      "enum": [
        "Pale",
        "Light",
        "Brown",
        "DarkBrown",
        "Black"
      ]
    },
    "SortEvaluationsBy": {
      "type": "string",
      "enum": [
        "CREATION_TIME"
      ]
    },
    "SortModelsBy": {
      "type": "string",
      "enum": [
        "CREATION_TIME"
      ]
    },
    "SpeedGranularity": {
      "type": "integer",
      "max": 3,
      "min": 1
    },
    "SpeedRange": {
      "type": "structure",
      "required": [
        "Low",
        "High"
      ],
      "members": {
        "Low": {
          "shape": "double"
        },
        "High": {
          "shape": "double"
        }
      }
    },
    "StandardLengthString": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^.+$"
    },
    "StartBYOAJobRequest": {
      "type": "structure",
      "required": [
        "TerminationConditions"
      ],
      "members": {
        "Name": {
          "shape": "StandardLengthString"
        },
        "TerminationConditions": {
          "shape": "TerminationConditions"
        }
      }
    },
    "StartBYOAJobResponse": {
      "type": "structure",
      "required": [
        "BYOAJobArn"
      ],
      "members": {
        "BYOAJobArn": {
          "shape": "Arn"
        }
      }
    },
    "StartEvaluationRequest": {
      "type": "structure",
      "required": [
        "ModelArn",
        "EvaluationConfig"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "EvaluationConfig": {
          "shape": "EvaluationConfig"
        },
        "RoleArn": {
          "shape": "Arn"
        }
      }
    },
    "StartEvaluationResponse": {
      "type": "structure",
      "required": [
        "EvaluationJobArn"
      ],
      "members": {
        "EvaluationJobArn": {
          "shape": "EvaluationJobArn"
        }
      }
    },
    "SteeringAngleRange": {
      "type": "structure",
      "required": [
        "Low",
        "High"
      ],
      "members": {
        "Low": {
          "shape": "double"
        },
        "High": {
          "shape": "double"
        }
      }
    },
    "SteeringGranularity": {
      "type": "integer",
      "max": 7,
      "min": 1
    },
    "StopBYOAJobRequest": {
      "type": "structure",
      "required": [
        "BYOAJobArn"
      ],
      "members": {
        "BYOAJobArn": {
          "shape": "Arn"
        }
      }
    },
    "StopBYOAJobResponse": {
      "type": "structure",
      "members": {}
    },
    "StopEvaluationRequest": {
      "type": "structure",
      "required": [
        "EvaluationJobArn"
      ],
      "members": {
        "EvaluationJobArn": {
          "shape": "EvaluationJobArn"
        }
      }
    },
    "StopEvaluationResponse": {
      "type": "structure",
      "members": {}
    },
    "StopTrainingReinforcementLearningModelRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "StopTrainingReinforcementLearningModelResponse": {
      "type": "structure",
      "members": {}
    },
    "SubmissionOverrides": {
      "type": "structure",
      "required": [
        "AliasOverride",
        "CarCustomizationOverride"
      ],
      "members": {
        "AliasOverride": {
          "shape": "StandardLengthString"
        },
        "Email": {
          "shape": "StandardLengthString"
        },
        "CarCustomizationOverride": {
          "shape": "CarCustomization"
        }
      }
    },
    "TagResourceRequest": {
      "type": "structure",
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "members": {
        "ResourceArn": {
          "shape": "Arn"
        },
        "Tags": {
          "shape": "Tags"
        }
      }
    },
    "TagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "Tag": {
      "type": "structure",
      "required": [
        "Key",
        "Value"
      ],
      "members": {
        "Key": {
          "shape": "StandardLengthString"
        },
        "Value": {
          "shape": "StandardLengthString"
        }
      }
    },
    "TagKeys": {
      "type": "list",
      "member": {
        "shape": "StandardLengthString"
      }
    },
    "TagrisSweep": {
      "type": "structure",
      "members": {
        "TagrisAccountId": {
          "shape": "StandardLengthString"
        },
        "TagrisAmazonResourceName": {
          "shape": "StandardLengthString"
        },
        "TagrisInternalId": {
          "shape": "StandardLengthString"
        },
        "TagrisVersion": {
          "shape": "long"
        }
      }
    },
    "TagrisSweepList": {
      "type": "list",
      "member": {
        "shape": "TagrisSweep"
      }
    },
    "Tags": {
      "type": "list",
      "member": {
        "shape": "Tag"
      }
    },
    "TerminationConditions": {
      "type": "structure",
      "required": [
        "MaxTimeInMinutes"
      ],
      "members": {
        "MaxTimeInMinutes": {
          "shape": "integer"
        }
      }
    },
    "TermsConditionId": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "TestRewardFunctionErrorType": {
      "type": "string",
      "enum": [
        "SYNTAX_ERROR",
        "IMPORT_ERROR",
        "TEST_FAILURE"
      ]
    },
    "TestRewardFunctionRequest": {
      "type": "structure",
      "required": [
        "RewardFunctionCode"
      ],
      "members": {
        "RewardFunctionCode": {
          "shape": "RewardFunctionCode"
        }
      }
    },
    "TestRewardFunctionResponse": {
      "type": "structure",
      "members": {
        "ErrorDetailsList": {
          "shape": "ErrorDetailsList"
        }
      }
    },
    "ThemeConfig": {
      "type": "structure",
      "members": {
        "ThemeID": {
          "shape": "ThemeID"
        }
      }
    },
    "ThemeID": {
      "type": "string",
      "max": 64,
      "min": 1
    },
    "TimeTrial": {
      "type": "structure",
      "members": {}
    },
    "TimingMethod": {
      "type": "string",
      "enum": [
        "BEST_LAP_TIME",
        "AVG_LAP_TIME",
        "TOTAL_TIME"
      ]
    },
    "Top": {
      "type": "string",
      "enum": [
        "Helmet",
        "Hijab",
        "Turban",
        "WinterHat1",
        "WinterHat2",
        "WinterHat3",
        "WinterHat4",
        "LongHairFrida",
        "LongHairFro",
        "LongHairFroBand",
        "NoHair",
        "ShortHairSides",
        "LongHairBigHair",
        "LongHairBob",
        "LongHairBun",
        "LongHairCurly",
        "LongHairCurvy",
        "LongHairDreads",
        "LongHairNotTooLong",
        "LongHairMiaWallace",
        "LongHairStraight",
        "LongHairStraight2",
        "LongHairStraightStrand",
        "ShortHairDreads01",
        "ShortHairDreads02",
        "ShortHairFrizzle",
        "ShortHairShaggyMullet",
        "ShortHairShortCurly",
        "ShortHairShortFlat",
        "ShortHairShortRound",
        "ShortHairShortWaved",
        "ShortHairTheCaesar",
        "ShortHairTheCaesarSidePart"
      ]
    },
    "Tournament": {
      "type": "structure",
      "required": [
        "Size",
        "ResultsReleaseTimes"
      ],
      "members": {
        "Size": {
          "shape": "NonNegativeInteger"
        },
        "ResultsReleaseTimes": {
          "shape": "ResultsReleaseTimes"
        }
      }
    },
    "TournamentConfig": {
      "type": "structure",
      "members": {
        "MaxLaps": {
          "shape": "integer"
        },
        "ResettingBehavior": {
          "shape": "ResettingBehaviourConfig"
        }
      }
    },
    "TournamentRacersOverride": {
      "type": "list",
      "member": {
        "shape": "StandardLengthString"
      }
    },
    "TournamentResults": {
      "type": "structure",
      "members": {
        "Races": {
          "shape": "RaceList"
        }
      }
    },
    "TournamentStatus": {
      "type": "string"
    },
    "Track": {
      "type": "structure",
      "members": {
        "TrackArn": {
          "shape": "TrackArn"
        },
        "TrackName": {
          "shape": "Name"
        },
        "TrackDescription": {
          "shape": "Description"
        },
        "TrackDifficulty": {
          "shape": "integer"
        },
        "TrackReleaseTime": {
          "shape": "long"
        },
        "TrackLength": {
          "shape": "double"
        },
        "TrackWidth": {
          "shape": "double"
        },
        "TrackUsageCount": {
          "shape": "integer"
        },
        "TrackTags": {
          "shape": "Tags"
        },
        "EnabledConsoles": {
          "shape": "EnabledConsoles"
        },
        "AvailableTrackFeatures": {
          "shape": "AvailableTrackFeatures"
        }
      }
    },
    "TrackArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "arn:.*"
    },
    "TrackConfig": {
      "type": "structure",
      "required": [
        "TrackArn"
      ],
      "members": {
        "TrackArn": {
          "shape": "TrackArn"
        }
      }
    },
    "TrackFeatures": {
      "type": "structure",
      "required": [
        "Direction"
      ],
      "members": {
        "Direction": {
          "shape": "Direction"
        }
      }
    },
    "TrackList": {
      "type": "list",
      "member": {
        "shape": "Track"
      }
    },
    "TrackRecord": {
      "type": "structure",
      "members": {
        "RecordItemKey": {
          "shape": "StandardLengthString"
        },
        "Rankings": {
          "shape": "RankingList"
        }
      }
    },
    "TrackRecordList": {
      "type": "list",
      "member": {
        "shape": "TrackRecord"
      }
    },
    "TrainingConfig": {
      "type": "structure",
      "required": [
        "ResourceConfig",
        "TrackConfig",
        "TerminationConditions"
      ],
      "members": {
        "RewardFunctionS3Source": {
          "shape": "S3Bucket"
        },
        "RewardFunction": {
          "shape": "CodeBlock"
        },
        "ModelMetadataS3Source": {
          "shape": "S3Bucket"
        },
        "ModelMetadata": {
          "shape": "MetaData"
        },
        "ResourceConfig": {
          "shape": "TrainingResourceConfig"
        },
        "TrackConfig": {
          "shape": "TrackConfig"
        },
        "RaceType": {
          "shape": "RaceType"
        },
        "TerminationConditions": {
          "shape": "TrainingTerminationConditions"
        },
        "Hyperparameters": {
          "shape": "map"
        },
        "PreprocessType": {
          "shape": "PreprocessType"
        },
        "PreprocessParameters": {
          "shape": "map"
        },
        "HeadToHeadConfig": {
          "shape": "HeadToHeadConfig"
        },
        "ObjectAvoidanceConfig": {
          "shape": "ObjectAvoidanceConfig"
        }
      }
    },
    "TrainingJob": {
      "type": "structure",
      "required": [
        "JobArn",
        "ActivityJob",
        "Config",
        "Metrics"
      ],
      "members": {
        "JobArn": {
          "shape": "TrainingJobArn"
        },
        "ActivityJob": {
          "shape": "ActivityJob"
        },
        "Config": {
          "shape": "TrainingConfig"
        },
        "Metrics": {
          "shape": "TrainingMetrics"
        },
        "RoboMakerJobArn": {
          "shape": "Arn"
        },
        "SageMakerJobArn": {
          "shape": "Arn"
        },
        "AutoSubmission": {
          "shape": "AutoSubmission"
        }
      }
    },
    "TrainingJobArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "^arn:aws:deepracer:[a-z0-9-]*:[0-9]{12}:training_job/[a-zA-Z0-9_\\-]+$"
    },
    "TrainingJobList": {
      "type": "list",
      "member": {
        "shape": "TrainingJob"
      }
    },
    "TrainingMetrics": {
      "type": "structure",
      "members": {
        "Namespace": {
          "shape": "StandardLengthString"
        },
        "MetricsName": {
          "shape": "StandardLengthString"
        },
        "Dimensions": {
          "shape": "DimensionList"
        }
      }
    },
    "TrainingResourceConfig": {
      "type": "structure",
      "required": [
        "InstanceType",
        "InstanceCount"
      ],
      "members": {
        "InstanceType": {
          "shape": "StandardLengthString"
        },
        "InstanceCount": {
          "shape": "PositiveInteger"
        }
      }
    },
    "TrainingTerminationConditions": {
      "type": "structure",
      "members": {
        "RewardScore": {
          "shape": "double"
        },
        "MaxTimeInMinutes": {
          "shape": "PositiveInteger"
        },
        "MaxEpisodes": {
          "shape": "PositiveInteger"
        }
      }
    },
    "TshirtGraphic": {
      "type": "string",
      "enum": [
        "Diamond",
        "Hola",
        "Pizza"
      ]
    },
    "UntagResourceRequest": {
      "type": "structure",
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "members": {
        "ResourceArn": {
          "shape": "Arn"
        },
        "TagKeys": {
          "shape": "TagKeys"
        }
      }
    },
    "UntagResourceResponse": {
      "type": "structure",
      "members": {}
    },
    "UpdateCarRequest": {
      "type": "structure",
      "required": [
        "Car"
      ],
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "UpdateCarResponse": {
      "type": "structure",
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "Url": {
      "type": "string",
      "pattern": "^https:\\/\\/.*"
    },
    "UserAction": {
      "type": "string",
      "enum": [
        "ENABLE",
        "DISABLE",
        "RESTRICT",
        "DELETE_RESOURCES",
        "SET_LIMITS"
      ]
    },
    "UserIds": {
      "type": "list",
      "member": {
        "shape": "StandardLengthString"
      }
    },
    "UserLimits": {
      "type": "structure",
      "members": {
        "MaxModels": {
          "shape": "integer"
        },
        "MaxComputeMinutes": {
          "shape": "integer"
        }
      }
    },
    "UserState": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "DISABLED",
        "RESTRICTED"
      ]
    },
    "VerifyResourcesExistForTagrisRequest": {
      "type": "structure",
      "required": [
        "TagrisSweepList"
      ],
      "members": {
        "TagrisSweepList": {
          "shape": "TagrisSweepList"
        }
      }
    },
    "VerifyResourcesExistForTagrisResponse": {
      "type": "structure",
      "required": [
        "TagrisSweepListResult"
      ],
      "members": {
        "TagrisSweepListResult": {
          "shape": "map"
        }
      }
    },
    "Winner": {
      "type": "structure",
      "members": {
        "Id": {
          "shape": "StandardLengthString"
        },
        "Name": {
          "shape": "StandardLengthString"
        },
        "Type": {
          "shape": "RaceType"
        },
        "Rewards": {
          "shape": "Rewards"
        },
        "UserAvatarConfig": {
          "shape": "AvatarConfig"
        }
      }
    },
    "WinnerList": {
      "type": "list",
      "member": {
        "shape": "Winner"
      }
    },
    "boolean": {
      "type": "boolean"
    },
    "double": {
      "type": "double"
    },
    "epochTimeMillis": {
      "type": "long"
    },
    "integer": {
      "type": "integer"
    },
    "long": {
      "type": "long"
    },
    "map": {
      "type": "map",
      "key": {
        "shape": "StandardLengthString"
      },
      "value": {
        "shape": "StandardLengthString"
      }
    }
  },
  "documentation": "<p>AWS DeepRacer is the easiest way to get started with learning reinforcement learning. Visit <a href=\"https://aws.amazon.com/deepracer/\">https://aws.amazon.com/deepracer/</a> to learn more.</p>\n<p>While it is strongly recommended that you start interacting with DeepRacer through the AWS Console, all operations available on the website are also available programatically and through aws cli.</p>"
}