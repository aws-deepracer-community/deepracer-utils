{
  "version": "2.0",
  "metadata": {
    "apiVersion": "2019-04-01",
    "signingName": "deepracer",
    "endpointPrefix": "deepracer-prod",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceFullName": "AWS DeepRacer",
    "serviceId": "ID",
    "signatureVersion": "v4",
    "targetPrefix": "AwsSilverstoneCloudService",
    "uid": "deepracer-2019-04-01"
  },
  "operations": {
    "AddLeaderboardAccessPermission": {
      "name": "AddLeaderboardAccessPermission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AddLeaderboardAccessPermissionRequest"
      },
      "output": {
        "shape": "AddLeaderboardAccessPermissionResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "CloneReinforcementLearningModel": {
      "name": "CloneReinforcementLearningModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CloneReinforcementLearningModelRequest"
      },
      "output": {
        "shape": "CloneReinforcementLearningModelResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "CreateAccountResources": {
      "name": "CreateAccountResources",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateAccountResourcesRequest"
      },
      "output": {
        "shape": "CreateAccountResourcesResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "CreateCar": {
      "name": "CreateCar",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateCarRequest"
      },
      "output": {
        "shape": "CreateCarResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "CreateLeaderboardAccessToken": {
      "name": "CreateLeaderboardAccessToken",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLeaderboardAccessTokenRequest"
      },
      "output": {
        "shape": "CreateLeaderboardAccessTokenResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "CreateLeaderboardSubmission": {
      "name": "CreateLeaderboardSubmission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLeaderboardSubmissionRequest"
      },
      "output": {
        "shape": "CreateLeaderboardSubmissionResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "CreatePrivateLeaderboard": {
      "name": "CreatePrivateLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreatePrivateLeaderboardRequest"
      },
      "output": {
        "shape": "CreatePrivateLeaderboardResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "CreateReinforcementLearningModel": {
      "name": "CreateReinforcementLearningModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateReinforcementLearningModelRequest"
      },
      "output": {
        "shape": "CreateReinforcementLearningModelResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "DeleteAccountResources": {
      "name": "DeleteAccountResources",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteAccountResourcesRequest"
      },
      "output": {
        "shape": "DeleteAccountResourcesResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "DeleteCar": {
      "name": "DeleteCar",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteCarRequest"
      },
      "output": {
        "shape": "DeleteCarResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ],
      "internalonly": true
    },
    "DeleteCars": {
      "name": "DeleteCars",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteCarsRequest"
      },
      "output": {
        "shape": "DeleteCarsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ],
      "internalonly": true
    },
    "DeleteModel": {
      "name": "DeleteModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteModelRequest"
      },
      "output": {
        "shape": "DeleteModelResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "DeletePrivateLeaderboard": {
      "name": "DeletePrivateLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeletePrivateLeaderboardRequest"
      },
      "output": {
        "shape": "DeletePrivateLeaderboardResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "EditPrivateLeaderboard": {
      "name": "EditPrivateLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "EditPrivateLeaderboardRequest"
      },
      "output": {
        "shape": "EditPrivateLeaderboardResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetAccountResources": {
      "name": "GetAccountResources",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetAccountResourcesRequest"
      },
      "output": {
        "shape": "GetAccountResourcesResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetAlias": {
      "name": "GetAlias",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "output": {
        "shape": "GetAliasResponse"
      },
      "errors": [
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetAssetUrl": {
      "name": "GetAssetUrl",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetAssetUrlRequest"
      },
      "output": {
        "shape": "GetAssetUrlResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "GetCar": {
      "name": "GetCar",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetCarRequest"
      },
      "output": {
        "shape": "GetCarResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "GetCars": {
      "name": "GetCars",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetCarsRequest"
      },
      "output": {
        "shape": "GetCarsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetEvaluation": {
      "name": "GetEvaluation",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetEvaluationRequest"
      },
      "output": {
        "shape": "GetEvaluationResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetLatestUserSubmission": {
      "name": "GetLatestUserSubmission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLatestUserSubmissionRequest"
      },
      "output": {
        "shape": "GetLatestUserSubmissionResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetLeaderboard": {
      "name": "GetLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLeaderboardRequest"
      },
      "output": {
        "shape": "GetLeaderboardResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetModel": {
      "name": "GetModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetModelRequest"
      },
      "output": {
        "shape": "GetModelResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "GetPrivateLeaderboard": {
      "name": "GetPrivateLeaderboard",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetPrivateLeaderboardRequest"
      },
      "output": {
        "shape": "GetPrivateLeaderboardResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetRankedUserSubmission": {
      "name": "GetRankedUserSubmission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetRankedUserSubmissionRequest"
      },
      "output": {
        "shape": "GetRankedUserSubmissionResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "GetTournament": {
      "name": "GetTournament",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTournamentRequest"
      },
      "output": {
        "shape": "GetTournamentResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "GetTrack": {
      "name": "GetTrack",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTrackRequest"
      },
      "output": {
        "shape": "GetTrackResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "GetTrainingJob": {
      "name": "GetTrainingJob",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTrainingJobRequest"
      },
      "output": {
        "shape": "GetTrainingJobResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "ImportModel": {
      "name": "ImportModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ImportModelRequest"
      },
      "output": {
        "shape": "ImportModelResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "ListEvaluations": {
      "name": "ListEvaluations",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListEvaluationsRequest"
      },
      "output": {
        "shape": "ListEvaluationsResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "ListLeaderboardSubmissions": {
      "name": "ListLeaderboardSubmissions",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLeaderboardSubmissionsRequest"
      },
      "output": {
        "shape": "ListLeaderboardSubmissionsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "ListLeaderboardWinners": {
      "name": "ListLeaderboardWinners",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLeaderboardWinnersRequest"
      },
      "output": {
        "shape": "ListLeaderboardWinnersResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "ListLeaderboards": {
      "name": "ListLeaderboards",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLeaderboardsRequest"
      },
      "output": {
        "shape": "ListLeaderboardsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "ListModels": {
      "name": "ListModels",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListModelsRequest"
      },
      "output": {
        "shape": "ListModelsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "ListPrivateLeaderboardParticipants": {
      "name": "ListPrivateLeaderboardParticipants",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListPrivateLeaderboardParticipantsRequest"
      },
      "output": {
        "shape": "ListPrivateLeaderboardParticipantsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "ListPrivateLeaderboards": {
      "name": "ListPrivateLeaderboards",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListPrivateLeaderboardsRequest"
      },
      "output": {
        "shape": "ListPrivateLeaderboardsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "ListSubscribedPrivateLeaderboards": {
      "name": "ListSubscribedPrivateLeaderboards",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListSubscribedPrivateLeaderboardsRequest"
      },
      "output": {
        "shape": "ListSubscribedPrivateLeaderboardsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "ListTracks": {
      "name": "ListTracks",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTracksRequest"
      },
      "output": {
        "shape": "ListTracksResponse"
      },
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "ListTrainingJobs": {
      "name": "ListTrainingJobs",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTrainingJobsRequest"
      },
      "output": {
        "shape": "ListTrainingJobsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "MigrateModels": {
      "name": "MigrateModels",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "MigrateModelsRequest"
      },
      "output": {
        "shape": "MigrateModelsResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "RemoveLeaderboardAccessPermission": {
      "name": "RemoveLeaderboardAccessPermission",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "RemoveLeaderboardAccessPermissionRequest"
      },
      "output": {
        "shape": "RemoveLeaderboardAccessPermissionResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "RunTournament": {
      "name": "RunTournament",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "RunTournamentRequest"
      },
      "output": {
        "shape": "RunTournamentResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "SetAlias": {
      "name": "SetAlias",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "SetAliasRequest"
      },
      "errors": [
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "StartEvaluation": {
      "name": "StartEvaluation",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartEvaluationRequest"
      },
      "output": {
        "shape": "StartEvaluationResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "StopEvaluation": {
      "name": "StopEvaluation",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopEvaluationRequest"
      },
      "output": {
        "shape": "StopEvaluationResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "JobNotActiveException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "StopTrainingReinforcementLearningModel": {
      "name": "StopTrainingReinforcementLearningModel",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopTrainingReinforcementLearningModelRequest"
      },
      "output": {
        "shape": "StopTrainingReinforcementLearningModelResponse"
      },
      "errors": [
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "JobNotActiveException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ]
    },
    "TestRewardFunction": {
      "name": "TestRewardFunction",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "TestRewardFunctionRequest"
      },
      "output": {
        "shape": "TestRewardFunctionResponse"
      },
      "errors": [
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    },
    "UpdateCar": {
      "name": "UpdateCar",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateCarRequest"
      },
      "output": {
        "shape": "UpdateCarResponse"
      },
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CustomerAuthorizationFailedException"
        },
        {
          "shape": "ResourceDoesNotExistException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceException"
        }
      ]
    }
  },
  "shapes": {
    "AccessToken": {
      "type": "string",
      "max": 32,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-_]+$"
    },
    "AccountId": {
      "type": "string",
      "max": 12,
      "min": 12,
      "pattern": "[0-9]{12}"
    },
    "AccountResources": {
      "type": "structure",
      "required": [
        "AccountRoles"
      ],
      "members": {
        "AccountRoles": {
          "shape": "AccountRoles"
        },
        "Status": {
          "shape": "AccountResourcesStatus"
        },
        "S3Bucket": {
          "shape": "S3Bucket"
        },
        "RoboMakerSimulationApplication": {
          "shape": "RoboMakerSimulationApplication"
        },
        "VpcStack": {
          "shape": "VpcStack"
        },
        "VersioningStatus": {
          "shape": "VersioningStatus"
        }
      }
    },
    "AccountResourcesStatus": {
      "type": "string",
      "enum": [
        "CREATED",
        "CREATING",
        "DELETING",
        "ERROR",
        "MIGRATING"
      ]
    },
    "AccountRoles": {
      "type": "structure",
      "required": [
        "DeepRacerRoleArn",
        "SageMakerRoleArn",
        "RoboMakerRoleArn",
        "LambdaRoleArn",
        "CloudFormationRoleArn"
      ],
      "members": {
        "DeepRacerRoleArn": {
          "shape": "RoleArn"
        },
        "SageMakerRoleArn": {
          "shape": "RoleArn"
        },
        "RoboMakerRoleArn": {
          "shape": "RoleArn"
        },
        "LambdaRoleArn": {
          "shape": "RoleArn"
        },
        "CloudFormationRoleArn": {
          "shape": "RoleArn"
        }
      }
    },
    "ActionSpace": {
      "type": "structure",
      "required": [
        "MaximumSteeringAngle",
        "SteeringGranularity",
        "MaximumSpeed",
        "SpeedGranularity"
      ],
      "members": {
        "MaximumSteeringAngle": {
          "shape": "MaximumSteeringAngle"
        },
        "SteeringGranularity": {
          "shape": "SteeringGranularity"
        },
        "MaximumSpeed": {
          "shape": "MaximumSpeed"
        },
        "SpeedGranularity": {
          "shape": "SpeedGranularity"
        }
      }
    },
    "ActivityJob": {
      "type": "structure",
      "required": [
        "ModelArn",
        "CreationTime",
        "StartTime",
        "Status"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "CreationTime": {
          "shape": "epochTimeMillis"
        },
        "FailureReason": {
          "shape": "Description"
        },
        "StartTime": {
          "shape": "epochTimeMillis"
        },
        "EndTime": {
          "shape": "epochTimeMillis"
        },
        "Status": {
          "shape": "ActivityStatus"
        },
        "MetricsS3Path": {
          "shape": "StandardLengthString"
        },
        "MetricsPreSignedUrl": {
          "shape": "Url"
        },
        "Videos": {
          "shape": "ActivityVideos"
        },
        "LogDownloadComplete": {
          "shape": "Boolean"
        }
      }
    },
    "ActivityJobStatus": {
      "type": "string",
      "enum": [
        "CREATED",
        "INITIALIZING",
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED",
        "STOPPING"
      ]
    },
    "ActivityStatus": {
      "type": "structure",
      "required": [
        "JobStatus",
        "TimeInMinutes",
        "Units"
      ],
      "members": {
        "JobStatus": {
          "shape": "ActivityJobStatus"
        },
        "Score": {
          "shape": "integer"
        },
        "TimeInMinutes": {
          "shape": "NonNegativeInteger"
        },
        "Units": {
          "shape": "NonNegativeInteger"
        }
      }
    },
    "ActivityVideo": {
      "type": "structure",
      "members": {
        "KinesisVideoStreamArn": {
          "shape": "StandardLengthString"
        },
        "S3Location": {
          "shape": "StandardLengthString"
        },
        "KinesisVideoUrl": {
          "shape": "StandardLengthString"
        },
        "KinesisVideoUrlExpiry": {
          "shape": "epochTimeMillis"
        }
      }
    },
    "ActivityVideoAngle": {
      "type": "string",
      "enum": [
        "FRONT"
      ]
    },
    "ActivityVideos": {
      "type": "map",
      "key": {
        "shape": "ActivityVideoAngle"
      },
      "value": {
        "shape": "ActivityVideo"
      }
    },
    "AddLeaderboardAccessPermissionRequest": {
      "type": "structure",
      "required": [
        "AccessToken"
      ],
      "members": {
        "AccessToken": {
          "shape": "AccessToken"
        }
      }
    },
    "AddLeaderboardAccessPermissionResponse": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "AgentAlgorithm": {
      "type": "string",
      "enum": [
        "PPO"
      ]
    },
    "AgentNetwork": {
      "type": "string",
      "enum": [
        "SIX_LAYER_DOUBLE_HEAD_OUTPUT"
      ]
    },
    "Alias": {
      "type": "string",
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "Arn": {
      "type": "string",
      "pattern": "arn:.*"
    },
    "AssetType": {
      "type": "string",
      "enum": [
        "MODEL_ARTIFACT",
        "COMPLETE_MODEL_ARTIFACT",
        "SAGEMAKER_CLOUDWATCH_LOG",
        "ROBOMAKER_CLOUDWATCH_LOG",
        "ROBOMAKER_METRICS",
        "SIMTRACE_LOG",
        "MP4"
      ]
    },
    "AutoSubmission": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "AutoSubmissionStatus": {
          "shape": "AutoSubmissionStatus"
        }
      }
    },
    "AutoSubmissionStatus": {
      "type": "string",
      "enum": [
        "WAITING_FOR_TRAINING",
        "SUBMITTED",
        "TRAINING_FAILED",
        "SUBMISSION_SQS_FAILED",
        "SUBMISSION_REQUEST_FAILED"
      ]
    },
    "Boolean": {
      "type": "boolean"
    },
    "BotCarSpeed": {
      "type": "double",
      "max": 12,
      "min": 0.2
    },
    "Car": {
      "type": "structure",
      "required": [
        "Customization",
        "Configuration"
      ],
      "members": {
        "Arn": {
          "shape": "CarArn"
        },
        "Customization": {
          "shape": "CarCustomization"
        },
        "Configuration": {
          "shape": "CarConfiguration"
        }
      }
    },
    "CarArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "^arn:aws:deepracer:[a-z0-9-]*:[0-9]{12}:car/[a-zA-Z0-9_\\-]+$"
    },
    "CarColor": {
      "type": "string",
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-_]+$"
    },
    "CarConfiguration": {
      "type": "structure",
      "required": [
        "ActionSpace",
        "NeuralNetwork",
        "Sensors"
      ],
      "members": {
        "ActionSpace": {
          "shape": "ActionSpace"
        },
        "NeuralNetwork": {
          "shape": "NeuralNetwork"
        },
        "Sensors": {
          "shape": "SensorsList"
        }
      }
    },
    "CarCustomization": {
      "type": "structure",
      "required": [
        "Name",
        "Color"
      ],
      "members": {
        "Name": {
          "shape": "CarName"
        },
        "Color": {
          "shape": "CarColor"
        },
        "CarType": {
          "shape": "CarType"
        },
        "Top": {
          "shape": "PerspectiveCustomization"
        },
        "Sides": {
          "shape": "PerspectiveCustomization"
        },
        "Back": {
          "shape": "PerspectiveCustomization"
        }
      }
    },
    "CarDecal": {
      "type": "string",
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-_]+$"
    },
    "CarName": {
      "type": "string",
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-_]+$"
    },
    "CarType": {
      "type": "string",
      "enum": [
        "EVO",
        "F1"
      ]
    },
    "CarsList": {
      "type": "list",
      "member": {
        "shape": "Car"
      }
    },
    "CloneReinforcementLearningModelRequest": {
      "type": "structure",
      "required": [
        "ModelName",
        "TrainingConfig"
      ],
      "members": {
        "ModelArnToClone": {
          "shape": "ModelArn"
        },
        "ModelName": {
          "shape": "ModelName"
        },
        "ModelDescription": {
          "shape": "Description"
        },
        "TrainingConfig": {
          "shape": "TrainingConfig"
        },
        "RoleArn": {
          "shape": "RoleArn"
        },
        "AutoSubmission": {
          "shape": "AutoSubmission"
        }
      }
    },
    "CloneReinforcementLearningModelResponse": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "CodeBlock": {
      "type": "string",
      "max": 100000,
      "min": 1
    },
    "CreateAccountResourcesRequest": {
      "type": "structure",
      "required": [
        "AccountRoles"
      ],
      "members": {
        "AccountRoles": {
          "shape": "AccountRoles"
        }
      }
    },
    "CreateAccountResourcesResponse": {
      "type": "structure",
      "members": {}
    },
    "CreateCarRequest": {
      "type": "structure",
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "CreateCarResponse": {
      "type": "structure",
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "CreateLeaderboardAccessTokenRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn",
        "ExpirationTime"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "ExpirationTime": {
          "shape": "epochTimeMillis"
        }
      }
    },
    "CreateLeaderboardAccessTokenResponse": {
      "type": "structure",
      "required": [
        "AccessToken"
      ],
      "members": {
        "AccessToken": {
          "shape": "AccessToken"
        }
      }
    },
    "CreateLeaderboardSubmissionRequest": {
      "type": "structure",
      "required": [
        "ModelArn",
        "LeaderboardArn"
      ],
      "members": {
        "SubmissionDescription": {
          "shape": "Description"
        },
        "ModelArn": {
          "shape": "ModelArn"
        },
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "TermsAccepted": {
          "shape": "Boolean"
        },
        "RoleArn": {
          "shape": "RoleArn"
        },
        "AutoSubmission": {
          "shape": "AutoSubmission"
        }
      }
    },
    "CreateLeaderboardSubmissionResponse": {
      "type": "structure",
      "members": {}
    },
    "CreatePrivateLeaderboardRequest": {
      "type": "structure",
      "required": [
        "LeaderboardName",
        "LeaderboardDescription",
        "MinimumLaps",
        "TotalLaps",
        "StartTime",
        "EndTime",
        "TrackArn",
        "LeaderboardImage"
      ],
      "members": {
        "LeaderboardName": {
          "shape": "LeaderboardName"
        },
        "LeaderboardDescription": {
          "shape": "Description"
        },
        "MinimumLaps": {
          "shape": "PositiveInteger"
        },
        "TotalLaps": {
          "shape": "PositiveInteger"
        },
        "StartTime": {
          "shape": "epochTimeMillis"
        },
        "EndTime": {
          "shape": "epochTimeMillis"
        },
        "TrackArn": {
          "shape": "TrackArn"
        },
        "LeaderboardImage": {
          "shape": "LeaderboardImage"
        }
      }
    },
    "CreatePrivateLeaderboardResponse": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "CreateReinforcementLearningModelRequest": {
      "type": "structure",
      "required": [
        "ModelName",
        "ModelFramework",
        "AgentAlgorithm",
        "AgentNetwork",
        "TrainingConfig"
      ],
      "members": {
        "ModelName": {
          "shape": "ModelName"
        },
        "ModelFramework": {
          "shape": "ModelFramework"
        },
        "ModelDescription": {
          "shape": "Description"
        },
        "AgentAlgorithm": {
          "shape": "AgentAlgorithm"
        },
        "AgentNetwork": {
          "shape": "AgentNetwork"
        },
        "TrainingConfig": {
          "shape": "TrainingConfig"
        },
        "CarArn": {
          "shape": "CarArn"
        },
        "RoleArn": {
          "shape": "RoleArn"
        },
        "AutoSubmission": {
          "shape": "AutoSubmission"
        }
      }
    },
    "CreateReinforcementLearningModelResponse": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "CustomerAuthorizationFailedException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "DeleteAccountResourcesRequest": {
      "type": "structure",
      "members": {}
    },
    "DeleteAccountResourcesResponse": {
      "type": "structure",
      "members": {}
    },
    "DeleteCarRequest": {
      "type": "structure",
      "required": [
        "Arn"
      ],
      "members": {
        "Arn": {
          "shape": "CarArn"
        }
      }
    },
    "DeleteCarResponse": {
      "type": "structure",
      "members": {}
    },
    "DeleteCarsRequest": {
      "type": "structure",
      "members": {}
    },
    "DeleteCarsResponse": {
      "type": "structure",
      "members": {}
    },
    "DeleteModelRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "DeleteModelResponse": {
      "type": "structure",
      "members": {}
    },
    "DeletePrivateLeaderboardRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "DeletePrivateLeaderboardResponse": {
      "type": "structure",
      "members": {}
    },
    "Description": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^.+$"
    },
    "Details": {
      "type": "string",
      "min": 1
    },
    "Dimension": {
      "type": "structure",
      "members": {
        "Name": {
          "shape": "StandardLengthString"
        },
        "Value": {
          "shape": "StandardLengthString"
        }
      }
    },
    "DimensionList": {
      "type": "list",
      "member": {
        "shape": "Dimension"
      }
    },
    "Division": {
      "type": "string",
      "max": 64,
      "min": 1
    },
    "EditPrivateLeaderboardRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn",
        "LeaderboardDescription",
        "MinimumLaps",
        "TotalLaps",
        "StartTime",
        "EndTime",
        "TrackArn",
        "LeaderboardImage"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "LeaderboardDescription": {
          "shape": "Description"
        },
        "MinimumLaps": {
          "shape": "PositiveInteger"
        },
        "TotalLaps": {
          "shape": "PositiveInteger"
        },
        "StartTime": {
          "shape": "epochTimeMillis"
        },
        "EndTime": {
          "shape": "epochTimeMillis"
        },
        "TrackArn": {
          "shape": "TrackArn"
        },
        "LeaderboardImage": {
          "shape": "LeaderboardImage"
        }
      }
    },
    "EditPrivateLeaderboardResponse": {
      "type": "structure",
      "members": {}
    },
    "EpisodeStatus": {
      "type": "string",
      "max": 64,
      "min": 1
    },
    "ErrorCode": {
      "type": "string",
      "min": 1
    },
    "ErrorDetails": {
      "type": "structure",
      "required": [
        "Type",
        "Message"
      ],
      "members": {
        "Type": {
          "shape": "TestRewardFunctionErrorType"
        },
        "Message": {
          "shape": "Message"
        },
        "Line": {
          "shape": "StandardLengthString"
        },
        "LineNumber": {
          "shape": "PositiveInteger"
        }
      }
    },
    "ErrorDetailsList": {
      "type": "list",
      "member": {
        "shape": "ErrorDetails"
      }
    },
    "EvaluationConfig": {
      "type": "structure",
      "required": [
        "TrackArn",
        "TerminationConditions"
      ],
      "members": {
        "TrackArn": {
          "shape": "StandardLengthString"
        },
        "TerminationConditions": {
          "shape": "EvaluationTerminationConditions"
        },
        "RaceType": {
          "shape": "RaceType"
        },
        "HeadToHeadConfig": {
          "shape": "HeadToHeadConfig"
        },
        "ObjectAvoidanceConfig": {
          "shape": "ObjectAvoidanceConfig"
        },
        "ResettingBehaviorConfig": {
          "shape": "ResettingBehaviorConfig"
        }
      }
    },
    "EvaluationJob": {
      "type": "structure",
      "required": [
        "JobArn",
        "ActivityJob",
        "Config",
        "Metrics"
      ],
      "members": {
        "JobArn": {
          "shape": "EvaluationJobArn"
        },
        "ActivityJob": {
          "shape": "ActivityJob"
        },
        "Config": {
          "shape": "EvaluationConfig"
        },
        "Metrics": {
          "shape": "EvaluationMetrics"
        },
        "RoboMakerJobArn": {
          "shape": "Arn"
        }
      }
    },
    "EvaluationJobArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "^arn:aws:deepracer:[a-z0-9-]*:[0-9]{12}:evaluation_job/[a-zA-Z0-9_\\-]+$"
    },
    "EvaluationJobList": {
      "type": "list",
      "member": {
        "shape": "EvaluationJob"
      }
    },
    "EvaluationMetric": {
      "type": "structure",
      "members": {
        "Trial": {
          "shape": "PositiveInteger"
        },
        "ElapsedTimeInMilliseconds": {
          "shape": "PositiveInteger"
        },
        "CompletionPercentage": {
          "shape": "PositiveInteger"
        },
        "EpisodeStatus": {
          "shape": "EpisodeStatus"
        }
      }
    },
    "EvaluationMetrics": {
      "type": "list",
      "member": {
        "shape": "EvaluationMetric"
      }
    },
    "EvaluationTerminationConditions": {
      "type": "structure",
      "members": {
        "MaxTimeInMinutes": {
          "shape": "PositiveInteger"
        },
        "MaxLaps": {
          "shape": "PositiveInteger"
        }
      }
    },
    "GetAccountResourcesRequest": {
      "type": "structure",
      "members": {}
    },
    "GetAccountResourcesResponse": {
      "type": "structure",
      "required": [
        "AccountResources"
      ],
      "members": {
        "AccountResources": {
          "shape": "AccountResources"
        }
      }
    },
    "GetAliasResponse": {
      "type": "structure",
      "required": [
        "Alias"
      ],
      "members": {
        "Alias": {
          "shape": "Alias"
        }
      }
    },
    "GetAssetUrlRequest": {
      "type": "structure",
      "required": [
        "Arn",
        "AssetType"
      ],
      "members": {
        "Arn": {
          "shape": "Arn"
        },
        "AssetType": {
          "shape": "AssetType"
        },
        "ModelArtifactsS3Bucket": {
          "shape": "S3Bucket"
        },
        "ModelArtifactsS3Prefix": {
          "shape": "S3ObjectKey"
        }
      }
    },
    "GetAssetUrlResponse": {
      "type": "structure",
      "members": {
        "Url": {
          "shape": "Url"
        }
      }
    },
    "GetCarRequest": {
      "type": "structure",
      "required": [
        "Arn"
      ],
      "members": {
        "Arn": {
          "shape": "CarArn"
        }
      }
    },
    "GetCarResponse": {
      "type": "structure",
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "GetCarsRequest": {
      "type": "structure",
      "members": {}
    },
    "GetCarsResponse": {
      "type": "structure",
      "members": {
        "Cars": {
          "shape": "CarsList"
        }
      }
    },
    "GetEvaluationRequest": {
      "type": "structure",
      "required": [
        "EvaluationJobArn"
      ],
      "members": {
        "EvaluationJobArn": {
          "shape": "EvaluationJobArn"
        }
      }
    },
    "GetEvaluationResponse": {
      "type": "structure",
      "required": [
        "EvaluationJob"
      ],
      "members": {
        "EvaluationJob": {
          "shape": "EvaluationJob"
        }
      }
    },
    "GetLatestUserSubmissionRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetLatestUserSubmissionResponse": {
      "type": "structure",
      "required": [
        "LeaderboardSubmission"
      ],
      "members": {
        "LeaderboardSubmission": {
          "shape": "LeaderboardSubmission"
        }
      }
    },
    "GetLeaderboardRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetLeaderboardResponse": {
      "type": "structure",
      "members": {
        "Leaderboard": {
          "shape": "Leaderboard"
        }
      }
    },
    "GetModelRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "GetModelResponse": {
      "type": "structure",
      "required": [
        "Model"
      ],
      "members": {
        "Model": {
          "shape": "Model"
        }
      }
    },
    "GetPrivateLeaderboardRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetPrivateLeaderboardResponse": {
      "type": "structure",
      "members": {
        "PrivateLeaderboard": {
          "shape": "PrivateLeaderboard"
        }
      }
    },
    "GetRankedUserSubmissionRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetRankedUserSubmissionResponse": {
      "type": "structure",
      "required": [
        "LeaderboardSubmission"
      ],
      "members": {
        "LeaderboardSubmission": {
          "shape": "LeaderboardSubmission"
        }
      }
    },
    "GetTournamentRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "GetTournamentResponse": {
      "type": "structure",
      "required": [
        "Tournament"
      ],
      "members": {
        "Tournament": {
          "shape": "TournamentResults"
        }
      }
    },
    "GetTrackRequest": {
      "type": "structure",
      "required": [
        "TrackArn"
      ],
      "members": {
        "TrackArn": {
          "shape": "TrackArn"
        }
      }
    },
    "GetTrackResponse": {
      "type": "structure",
      "required": [
        "Track"
      ],
      "members": {
        "Track": {
          "shape": "Track"
        }
      }
    },
    "GetTrainingJobRequest": {
      "type": "structure",
      "required": [
        "TrainingJobArn"
      ],
      "members": {
        "TrainingJobArn": {
          "shape": "TrainingJobArn"
        }
      }
    },
    "GetTrainingJobResponse": {
      "type": "structure",
      "required": [
        "TrainingJob"
      ],
      "members": {
        "TrainingJob": {
          "shape": "TrainingJob"
        }
      }
    },
    "HeadToHeadConfig": {
      "type": "structure",
      "required": [
        "HeadToHeadType"
      ],
      "members": {
        "HeadToHeadType": {
          "shape": "HeadToHeadType"
        },
        "PolicyModelArn": {
          "shape": "ModelArn"
        },
        "NumBotCars": {
          "shape": "NumBotCars"
        },
        "BotCarSpeed": {
          "shape": "BotCarSpeed"
        },
        "EnableLaneChange": {
          "shape": "boolean"
        },
        "LowerLaneChangeTime": {
          "shape": "LaneChangeTime"
        },
        "UpperLaneChangeTime": {
          "shape": "LaneChangeTime"
        }
      }
    },
    "HeadToHeadType": {
      "type": "string",
      "enum": [
        "POLICY_DRIVEN_VEHICLE",
        "BOT_VEHICLE"
      ]
    },
    "ImportModelRequest": {
      "type": "structure",
      "required": [
        "Name",
        "ModelArtifactsS3Bucket",
        "ModelArtifactsS3Prefix",
        "RoleArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "Type": {
          "shape": "ModelType"
        },
        "Name": {
          "shape": "ModelName"
        },
        "Description": {
          "shape": "Description"
        },
        "ModelArtifactsS3Bucket": {
          "shape": "S3Bucket"
        },
        "ModelArtifactsS3Prefix": {
          "shape": "S3ObjectKey"
        },
        "RoleArn": {
          "shape": "RoleArn"
        }
      }
    },
    "ImportModelResponse": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "InvalidRequestException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "JobNotActiveException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "LaneChangeTime": {
      "type": "double",
      "max": 8.0,
      "min": 1.0
    },
    "Leaderboard": {
      "type": "structure",
      "required": [
        "Arn",
        "Name",
        "Description",
        "LaunchTime",
        "CloseTime",
        "Status",
        "MinimumLaps",
        "ParticipantCount",
        "ImageUrl",
        "TrackImageUrl"
      ],
      "members": {
        "Arn": {
          "shape": "LeaderboardArn"
        },
        "Name": {
          "shape": "LeaderboardName"
        },
        "Description": {
          "shape": "Description"
        },
        "LaunchTime": {
          "shape": "epochTimeMillis"
        },
        "CloseTime": {
          "shape": "epochTimeMillis"
        },
        "TrackArn": {
          "shape": "TrackArn"
        },
        "Status": {
          "shape": "LeaderboardStatus"
        },
        "MinimumLaps": {
          "shape": "PositiveInteger"
        },
        "ParticipantCount": {
          "shape": "NonNegativeInteger"
        },
        "ImageUrl": {
          "shape": "StandardLengthString"
        },
        "TrackImageUrl": {
          "shape": "StandardLengthString"
        },
        "HeadToHeadConfig": {
          "shape": "HeadToHeadConfig"
        },
        "ObjectAvoidanceConfig": {
          "shape": "ObjectAvoidanceConfig"
        },
        "ResettingBehaviorConfig": {
          "shape": "ResettingBehaviorConfig"
        },
        "RaceType": {
          "shape": "RaceType"
        },
        "TimingMethod": {
          "shape": "TimingMethod"
        },
        "TermsConditionId": {
          "shape": "TermsConditionId"
        },
        "TermsAccepted": {
          "shape": "Boolean"
        },
        "WinnerAlias": {
          "shape": "Alias"
        },
        "Division": {
          "shape": "Division"
        },
        "PlayoffRaceTypeConfig": {
          "shape": "PlayoffRaceTypeConfig"
        },
        "ThemeConfig": {
          "shape": "ThemeConfig"
        }
      }
    },
    "LeaderboardArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "arn:.*"
    },
    "LeaderboardImage": {
      "type": "string",
      "enum": [
        "LeaderboardImage1",
        "LeaderboardImage2",
        "LeaderboardImage3",
        "LeaderboardImage4",
        "LeaderboardImage5",
        "LeaderboardImage6"
      ]
    },
    "LeaderboardList": {
      "type": "list",
      "member": {
        "shape": "Leaderboard"
      }
    },
    "LeaderboardName": {
      "type": "string",
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "LeaderboardStatus": {
      "type": "string",
      "enum": [
        "UPCOMING",
        "OPEN",
        "CLOSED"
      ]
    },
    "LeaderboardSubmission": {
      "type": "structure",
      "required": [
        "Alias",
        "SubmissionTime",
        "LapCount",
        "AvgLapTime",
        "LeaderboardSubmissionStatusType"
      ],
      "members": {
        "ActivityArn": {
          "shape": "Arn"
        },
        "Alias": {
          "shape": "Alias"
        },
        "SubmissionTime": {
          "shape": "epochTimeMillis"
        },
        "LapCount": {
          "shape": "PositiveInteger"
        },
        "AvgLapTime": {
          "shape": "epochTimeMillis"
        },
        "BestLapTime": {
          "shape": "epochTimeMillis"
        },
        "TotalLapTime": {
          "shape": "epochTimeMillis"
        },
        "AvgResets": {
          "shape": "double"
        },
        "CollisionCount": {
          "shape": "NonNegativeInteger"
        },
        "OffTrackCount": {
          "shape": "NonNegativeInteger"
        },
        "ResetCount": {
          "shape": "NonNegativeInteger"
        },
        "SubmissionCount": {
          "shape": "NonNegativeInteger"
        },
        "SubmissionVideoS3path": {
          "shape": "Url"
        },
        "ModelArn": {
          "shape": "ModelArn"
        },
        "Rank": {
          "shape": "PositiveInteger"
        },
        "JobName": {
          "shape": "Name"
        },
        "LeaderboardSubmissionStatusType": {
          "shape": "LeaderboardSubmissionStatusType"
        },
        "RankingScore": {
          "shape": "epochTimeMillis"
        },
        "ModelCreatedInDataAccount": {
          "shape": "Boolean"
        },
        "LogDownloadComplete": {
          "shape": "Boolean"
        }
      }
    },
    "LeaderboardSubmissionList": {
      "type": "list",
      "member": {
        "shape": "LeaderboardSubmission"
      }
    },
    "LeaderboardSubmissionStatusType": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "QUEUED",
        "RUNNING",
        "FAILED",
        "ERROR"
      ]
    },
    "ListEvaluationsRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "SortBy": {
          "shape": "SortEvaluationsBy"
        },
        "SortOrder": {
          "shape": "ListSortOrder"
        },
        "StatusEquals": {
          "shape": "ActivityJobStatus"
        }
      }
    },
    "ListEvaluationsResponse": {
      "type": "structure",
      "members": {
        "EvaluationJobs": {
          "shape": "EvaluationJobList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListLeaderboardSubmissionsRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        }
      }
    },
    "ListLeaderboardSubmissionsResponse": {
      "type": "structure",
      "members": {
        "LeaderboardSubmissions": {
          "shape": "LeaderboardSubmissionList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListLeaderboardWinnersRequest": {
      "type": "structure",
      "required": [
        "WinnerCutoffTime"
      ],
      "members": {
        "WinnerCutoffTime": {
          "shape": "epochTimeMillis"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListLeaderboardWinnersResponse": {
      "type": "structure",
      "required": [
        "WinnerList"
      ],
      "members": {
        "WinnerList": {
          "shape": "WinnerList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListLeaderboardsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        }
      }
    },
    "ListLeaderboardsResponse": {
      "type": "structure",
      "required": [
        "Leaderboards"
      ],
      "members": {
        "Leaderboards": {
          "shape": "LeaderboardList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListModelsRequest": {
      "type": "structure",
      "required": [
        "ModelType"
      ],
      "members": {
        "ModelType": {
          "shape": "ModelType"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        },
        "SortBy": {
          "shape": "SortModelsBy"
        },
        "SortOrder": {
          "shape": "ListSortOrder"
        }
      }
    },
    "ListModelsResponse": {
      "type": "structure",
      "members": {
        "Models": {
          "shape": "ModelList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListPrivateLeaderboardParticipantsRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        }
      }
    },
    "ListPrivateLeaderboardParticipantsResponse": {
      "type": "structure",
      "required": [
        "PrivateLeaderboardParticipants"
      ],
      "members": {
        "PrivateLeaderboardParticipants": {
          "shape": "PrivateLeaderboardParticipantList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListPrivateLeaderboardsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        }
      }
    },
    "ListPrivateLeaderboardsResponse": {
      "type": "structure",
      "required": [
        "PrivateLeaderboards"
      ],
      "members": {
        "PrivateLeaderboards": {
          "shape": "PrivateLeaderboardList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListSortOrder": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ]
    },
    "ListSubscribedPrivateLeaderboardsRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        }
      }
    },
    "ListSubscribedPrivateLeaderboardsResponse": {
      "type": "structure",
      "required": [
        "PrivateLeaderboards"
      ],
      "members": {
        "PrivateLeaderboards": {
          "shape": "PrivateLeaderboardList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListTracksRequest": {
      "type": "structure",
      "members": {
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        }
      }
    },
    "ListTracksResponse": {
      "type": "structure",
      "members": {
        "Tracks": {
          "shape": "TrackList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "ListTrainingJobsRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "NextToken": {
          "shape": "NextToken"
        },
        "MaxResults": {
          "shape": "MaxResults"
        }
      }
    },
    "ListTrainingJobsResponse": {
      "type": "structure",
      "members": {
        "TrainingJobs": {
          "shape": "TrainingJobList"
        },
        "NextToken": {
          "shape": "NextToken"
        }
      }
    },
    "MaxResults": {
      "type": "integer",
      "max": 100,
      "min": 1
    },
    "MaximumSpeed": {
      "type": "double",
      "max": 12.0,
      "min": 0.1
    },
    "MaximumSteeringAngle": {
      "type": "double",
      "max": 30.0,
      "min": 1.0
    },
    "Message": {
      "type": "string",
      "max": 2000,
      "min": 1
    },
    "MetaData": {
      "type": "string",
      "max": 100000,
      "min": 1
    },
    "MigrateModelsRequest": {
      "type": "structure",
      "members": {
        "ModelArnList": {
          "shape": "ModelArnList"
        },
        "RoleArn": {
          "shape": "RoleArn"
        }
      }
    },
    "MigrateModelsResponse": {
      "type": "structure",
      "members": {}
    },
    "Model": {
      "type": "structure",
      "required": [
        "ModelType",
        "ModelName",
        "ModelArn",
        "WasImported",
        "CreationTime",
        "ModelFramework",
        "AgentAlgorithm",
        "AgentNetwork",
        "Status"
      ],
      "members": {
        "ModelType": {
          "shape": "ModelType"
        },
        "ModelName": {
          "shape": "ModelName"
        },
        "ModelArn": {
          "shape": "ModelArn"
        },
        "ModelDescription": {
          "shape": "Description"
        },
        "WasImported": {
          "shape": "boolean"
        },
        "WasMigrated": {
          "shape": "boolean"
        },
        "CreatedInDataAccount": {
          "shape": "boolean"
        },
        "CreationTime": {
          "shape": "epochTimeMillis"
        },
        "ModelFramework": {
          "shape": "ModelFramework"
        },
        "ModelArtifactS3Location": {
          "shape": "S3Bucket"
        },
        "AgentAlgorithm": {
          "shape": "AgentAlgorithm"
        },
        "AgentNetwork": {
          "shape": "AgentNetwork"
        },
        "Status": {
          "shape": "ModelStatus"
        },
        "CarArn": {
          "shape": "CarArn"
        },
        "CarConfiguration": {
          "shape": "CarConfiguration"
        },
        "Error": {
          "shape": "ModelError"
        },
        "ModelPackagingComplete": {
          "shape": "Boolean"
        }
      }
    },
    "ModelArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "^arn:aws:deepracer:[a-z0-9-]*:[0-9]{12}:model/reinforcement_learning/[a-zA-Z0-9\\-]+$"
    },
    "ModelArnList": {
      "type": "list",
      "member": {
        "shape": "ModelArn"
      }
    },
    "ModelError": {
      "type": "structure",
      "members": {
        "ErrorCode": {
          "shape": "ErrorCode"
        },
        "Details": {
          "shape": "Details"
        }
      }
    },
    "ModelFramework": {
      "type": "string",
      "enum": [
        "TENSOR_FLOW"
      ]
    },
    "ModelList": {
      "type": "list",
      "member": {
        "shape": "Model"
      }
    },
    "ModelName": {
      "type": "string",
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "ModelStatus": {
      "type": "string",
      "enum": [
        "CREATED",
        "TRAINING",
        "READY",
        "DELETING",
        "ERROR",
        "EVALUATING",
        "STOPPING",
        "IMPORTING",
        "MIGRATING",
        "IMPORT_ERROR",
        "MIGRATE_ERROR"
      ]
    },
    "ModelType": {
      "type": "string",
      "enum": [
        "REINFORCEMENT_LEARNING"
      ]
    },
    "Name": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "NeuralNetwork": {
      "type": "string",
      "enum": [
        "DEEP_CONVOLUTIONAL_NETWORK",
        "DEEP_CONVOLUTIONAL_NETWORK_SHALLOW"
      ]
    },
    "NextToken": {
      "type": "string",
      "max": 2000,
      "min": 1,
      "pattern": "^[a-zA-Z0-9+/]+={0,2}$"
    },
    "NonNegativeDouble": {
      "type": "double",
      "min": 0
    },
    "NonNegativeInteger": {
      "type": "integer",
      "min": 0
    },
    "NumBotCars": {
      "type": "integer",
      "max": 6,
      "min": 1
    },
    "NumObstacles": {
      "type": "integer",
      "max": 10,
      "min": 1
    },
    "ObjectAvoidanceConfig": {
      "type": "structure",
      "required": [
        "RandomizeLocation",
        "NumObstacles",
        "ObstacleType"
      ],
      "members": {
        "RandomizeLocation": {
          "shape": "boolean"
        },
        "NumObstacles": {
          "shape": "NumObstacles"
        },
        "ObstacleType": {
          "shape": "ObstacleType"
        }
      }
    },
    "ObstacleType": {
      "type": "string",
      "enum": [
        "BOX"
      ]
    },
    "PerspectiveCustomization": {
      "type": "structure",
      "members": {
        "Decal": {
          "shape": "CarDecal"
        }
      }
    },
    "PlayoffRaceTypeConfig": {
      "type": "structure",
      "members": {
        "PlayoffRaceTypeID": {
          "shape": "PlayoffRaceTypeID"
        },
        "PlayoffRaceArn": {
          "shape": "LeaderboardArn"
        },
        "PlayoffReleaseTime": {
          "shape": "epochTimeMillis"
        },
        "PlayoffResultReleaseTime": {
          "shape": "epochTimeMillis"
        }
      }
    },
    "PlayoffRaceTypeID": {
      "type": "string",
      "enum": [
        "TOURNAMENT",
        "GRANDPRIX"
      ]
    },
    "PositiveInteger": {
      "type": "integer",
      "min": 1
    },
    "PrivateLeaderboard": {
      "type": "structure",
      "required": [
        "Arn",
        "Name",
        "Description",
        "StartTime",
        "EndTime",
        "TrackArn",
        "MinimumLaps",
        "TotalLaps",
        "ParticipantCount",
        "LeaderboardImage",
        "Status"
      ],
      "members": {
        "Arn": {
          "shape": "LeaderboardArn"
        },
        "Name": {
          "shape": "LeaderboardName"
        },
        "Description": {
          "shape": "Description"
        },
        "StartTime": {
          "shape": "epochTimeMillis"
        },
        "EndTime": {
          "shape": "epochTimeMillis"
        },
        "TrackArn": {
          "shape": "TrackArn"
        },
        "MinimumLaps": {
          "shape": "PositiveInteger"
        },
        "TotalLaps": {
          "shape": "PositiveInteger"
        },
        "ParticipantCount": {
          "shape": "NonNegativeInteger"
        },
        "LeaderboardImage": {
          "shape": "LeaderboardImage"
        },
        "TrackImageUrl": {
          "shape": "StandardLengthString"
        },
        "Alias": {
          "shape": "Alias"
        },
        "Status": {
          "shape": "LeaderboardStatus"
        },
        "AccessToken": {
          "shape": "AccessToken"
        },
        "RaceType": {
          "shape": "RaceType"
        },
        "HeadToHeadConfig": {
          "shape": "HeadToHeadConfig"
        },
        "ObjectAvoidanceConfig": {
          "shape": "ObjectAvoidanceConfig"
        },
        "ResettingBehaviorConfig": {
          "shape": "ResettingBehaviorConfig"
        },
        "TimingMethod": {
          "shape": "TimingMethod"
        },
        "Division": {
          "shape": "Division"
        },
        "PlayoffRaceTypeConfig": {
          "shape": "PlayoffRaceTypeConfig"
        },
        "ThemeConfig": {
          "shape": "ThemeConfig"
        }
      }
    },
    "PrivateLeaderboardList": {
      "type": "list",
      "member": {
        "shape": "PrivateLeaderboard"
      }
    },
    "PrivateLeaderboardParticipant": {
      "type": "structure",
      "members": {
        "AccountId": {
          "shape": "AccountId"
        },
        "Alias": {
          "shape": "Alias"
        },
        "JoinTime": {
          "shape": "epochTimeMillis"
        }
      }
    },
    "PrivateLeaderboardParticipantList": {
      "type": "list",
      "member": {
        "shape": "PrivateLeaderboardParticipant"
      }
    },
    "Race": {
      "type": "structure",
      "members": {
        "Racer1": {
          "shape": "RacerStatistics"
        },
        "Racer2": {
          "shape": "RacerStatistics"
        },
        "Winner": {
          "shape": "Alias"
        },
        "ResultsAvailableTime": {
          "shape": "epochTimeMillis"
        },
        "VideoUrl": {
          "shape": "Url"
        },
        "RaceGroup": {
          "shape": "NonNegativeInteger"
        }
      }
    },
    "RaceList": {
      "type": "list",
      "member": {
        "shape": "Race"
      }
    },
    "RaceType": {
      "type": "string",
      "enum": [
        "TIME_TRIAL",
        "OBJECT_AVOIDANCE",
        "HEAD_TO_HEAD_RACING"
      ]
    },
    "RacerStatistics": {
      "type": "structure",
      "members": {
        "Alias": {
          "shape": "Alias"
        },
        "CrashCount": {
          "shape": "NonNegativeInteger"
        },
        "OffTrackCount": {
          "shape": "NonNegativeInteger"
        },
        "TimeTakenMillis": {
          "shape": "epochTimeMillis"
        },
        "VideoUrl": {
          "shape": "Url"
        },
        "SeedNumber": {
          "shape": "NonNegativeInteger"
        }
      }
    },
    "RemoveLeaderboardAccessPermissionRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn",
        "AccountId"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "AccountId": {
          "shape": "AccountId"
        }
      }
    },
    "RemoveLeaderboardAccessPermissionResponse": {
      "type": "structure",
      "members": {}
    },
    "ResettingBehaviorConfig": {
      "type": "structure",
      "members": {
        "IsContinuousLap": {
          "shape": "boolean"
        },
        "AllowReset": {
          "shape": "boolean"
        },
        "MaxResetTimes": {
          "shape": "PositiveInteger"
        },
        "PenaltySeconds": {
          "shape": "PositiveInteger"
        },
        "CutOffSeconds": {
          "shape": "PositiveInteger"
        },
        "CollisionPenaltySeconds": {
          "shape": "NonNegativeDouble"
        },
        "OffTrackPenaltySeconds": {
          "shape": "NonNegativeDouble"
        }
      }
    },
    "ResourceAlreadyExistsException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "ResourceDoesNotExistException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "ResourceInUseException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "ResourceLimitExceededException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "RewardFunctionCode": {
      "type": "string",
      "max": 140000,
      "min": 1,
      "pattern": "[\\s\\S]+"
    },
    "RoboMakerSimulationApplication": {
      "type": "structure",
      "required": [
        "Name"
      ],
      "members": {
        "Name": {
          "shape": "StandardLengthString"
        },
        "Version": {
          "shape": "StandardLengthString"
        }
      }
    },
    "RoleArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "arn:aws(-iso)?:iam::[0-9]{12}:role/(service-role/)?[a-zA-Z0-9_\\+=,\\.\\-@]{1,64}"
    },
    "RunTournamentRequest": {
      "type": "structure",
      "required": [
        "LeaderboardArn"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        }
      }
    },
    "RunTournamentResponse": {
      "type": "structure",
      "members": {}
    },
    "S3Bucket": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^.+$"
    },
    "S3ObjectKey": {
      "type": "string",
      "min": 1
    },
    "SensorType": {
      "type": "string",
      "enum": [
        "FRONT_FACING_CAMERA",
        "STEREO_CAMERAS",
        "LIDAR"
      ]
    },
    "SensorsList": {
      "type": "list",
      "member": {
        "shape": "SensorType"
      }
    },
    "ServiceException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "SetAliasRequest": {
      "type": "structure",
      "required": [
        "Alias"
      ],
      "members": {
        "Alias": {
          "shape": "Alias"
        },
        "AccountId": {
          "shape": "AccountId"
        }
      }
    },
    "SortEvaluationsBy": {
      "type": "string",
      "enum": [
        "CREATION_TIME"
      ]
    },
    "SortModelsBy": {
      "type": "string",
      "enum": [
        "CREATION_TIME"
      ]
    },
    "SpeedGranularity": {
      "type": "integer",
      "max": 3,
      "min": 1
    },
    "StandardLengthString": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^.+$"
    },
    "StartEvaluationRequest": {
      "type": "structure",
      "required": [
        "ModelArn",
        "EvaluationConfig"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        },
        "EvaluationConfig": {
          "shape": "EvaluationConfig"
        },
        "RoleArn": {
          "shape": "RoleArn"
        }
      }
    },
    "StartEvaluationResponse": {
      "type": "structure",
      "required": [
        "EvaluationJobArn"
      ],
      "members": {
        "EvaluationJobArn": {
          "shape": "EvaluationJobArn"
        }
      }
    },
    "SteeringGranularity": {
      "type": "integer",
      "max": 7,
      "min": 1
    },
    "StopEvaluationRequest": {
      "type": "structure",
      "required": [
        "EvaluationJobArn"
      ],
      "members": {
        "EvaluationJobArn": {
          "shape": "EvaluationJobArn"
        }
      }
    },
    "StopEvaluationResponse": {
      "type": "structure",
      "members": {}
    },
    "StopTrainingReinforcementLearningModelRequest": {
      "type": "structure",
      "required": [
        "ModelArn"
      ],
      "members": {
        "ModelArn": {
          "shape": "ModelArn"
        }
      }
    },
    "StopTrainingReinforcementLearningModelResponse": {
      "type": "structure",
      "members": {}
    },
    "TermsConditionId": {
      "type": "string",
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\-]+$"
    },
    "TestRewardFunctionErrorType": {
      "type": "string",
      "enum": [
        "SYNTAX_ERROR",
        "IMPORT_ERROR",
        "TEST_FAILURE"
      ]
    },
    "TestRewardFunctionRequest": {
      "type": "structure",
      "required": [
        "RewardFunctionCode"
      ],
      "members": {
        "RewardFunctionCode": {
          "shape": "RewardFunctionCode"
        }
      }
    },
    "TestRewardFunctionResponse": {
      "type": "structure",
      "members": {
        "ErrorDetailsList": {
          "shape": "ErrorDetailsList"
        }
      }
    },
    "ThemeConfig": {
      "type": "structure",
      "members": {
        "ThemeID": {
          "shape": "ThemeID"
        }
      }
    },
    "ThemeID": {
      "type": "string",
      "max": 64,
      "min": 1
    },
    "TimingMethod": {
      "type": "string",
      "enum": [
        "BEST_LAP_TIME",
        "AVG_LAP_TIME",
        "TOTAL_TIME"
      ]
    },
    "TooManyRequestsException": {
      "type": "structure",
      "members": {},
      "exception": true
    },
    "TournamentResults": {
      "type": "structure",
      "members": {
        "Races": {
          "shape": "RaceList"
        }
      }
    },
    "Track": {
      "type": "structure",
      "members": {
        "TrackArn": {
          "shape": "TrackArn"
        },
        "TrackName": {
          "shape": "Name"
        },
        "TrackDescription": {
          "shape": "Description"
        },
        "TrackPicture": {
          "shape": "StandardLengthString"
        }
      }
    },
    "TrackArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "arn:.*"
    },
    "TrackConfig": {
      "type": "structure",
      "required": [
        "TrackArn"
      ],
      "members": {
        "TrackArn": {
          "shape": "TrackArn"
        }
      }
    },
    "TrackList": {
      "type": "list",
      "member": {
        "shape": "Track"
      }
    },
    "TrainingConfig": {
      "type": "structure",
      "required": [
        "ResourceConfig",
        "TrackConfig",
        "TerminationConditions"
      ],
      "members": {
        "RewardFunctionS3Source": {
          "shape": "S3Bucket"
        },
        "RewardFunction": {
          "shape": "CodeBlock"
        },
        "ModelMetadataS3Source": {
          "shape": "S3Bucket"
        },
        "ModelMetadata": {
          "shape": "MetaData"
        },
        "ResourceConfig": {
          "shape": "TrainingResourceConfig"
        },
        "TrackConfig": {
          "shape": "TrackConfig"
        },
        "RaceType": {
          "shape": "RaceType"
        },
        "TerminationConditions": {
          "shape": "TrainingTerminationConditions"
        },
        "Hyperparameters": {
          "shape": "map"
        },
        "HeadToHeadConfig": {
          "shape": "HeadToHeadConfig"
        },
        "ObjectAvoidanceConfig": {
          "shape": "ObjectAvoidanceConfig"
        }
      }
    },
    "TrainingJob": {
      "type": "structure",
      "required": [
        "JobArn",
        "ActivityJob",
        "Config",
        "Metrics"
      ],
      "members": {
        "JobArn": {
          "shape": "TrainingJobArn"
        },
        "ActivityJob": {
          "shape": "ActivityJob"
        },
        "Config": {
          "shape": "TrainingConfig"
        },
        "Metrics": {
          "shape": "TrainingMetrics"
        },
        "RoboMakerJobArn": {
          "shape": "Arn"
        },
        "SageMakerJobArn": {
          "shape": "Arn"
        },
        "AutoSubmission": {
          "shape": "AutoSubmission"
        }
      }
    },
    "TrainingJobArn": {
      "type": "string",
      "max": 1600,
      "min": 1,
      "pattern": "^arn:aws:deepracer:[a-z0-9-]*:[0-9]{12}:training_job/[a-zA-Z0-9_\\-]+$"
    },
    "TrainingJobList": {
      "type": "list",
      "member": {
        "shape": "TrainingJob"
      }
    },
    "TrainingMetrics": {
      "type": "structure",
      "members": {
        "Namespace": {
          "shape": "StandardLengthString"
        },
        "MetricsName": {
          "shape": "StandardLengthString"
        },
        "Dimensions": {
          "shape": "DimensionList"
        }
      }
    },
    "TrainingResourceConfig": {
      "type": "structure",
      "required": [
        "InstanceType",
        "InstanceCount"
      ],
      "members": {
        "InstanceType": {
          "shape": "StandardLengthString"
        },
        "InstanceCount": {
          "shape": "PositiveInteger"
        }
      }
    },
    "TrainingTerminationConditions": {
      "type": "structure",
      "members": {
        "RewardScore": {
          "shape": "double"
        },
        "MaxTimeInMinutes": {
          "shape": "PositiveInteger"
        },
        "MaxEpisodes": {
          "shape": "PositiveInteger"
        }
      }
    },
    "UpdateCarRequest": {
      "type": "structure",
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "UpdateCarResponse": {
      "type": "structure",
      "members": {
        "Car": {
          "shape": "Car"
        }
      }
    },
    "Url": {
      "type": "string",
      "pattern": "^https:\\/\\/.*"
    },
    "VersioningStatus": {
      "type": "string",
      "enum": [
        "OUTDATED",
        "LATEST"
      ]
    },
    "VpcStack": {
      "type": "structure",
      "required": [
        "Status"
      ],
      "members": {
        "Status": {
          "shape": "VpcStackStatus"
        }
      }
    },
    "VpcStackStatus": {
      "type": "string",
      "enum": [
        "CREATED",
        "FAILED"
      ]
    },
    "Winner": {
      "type": "structure",
      "required": [
        "LeaderboardArn",
        "LeaderboardName",
        "WinnerAlias",
        "CloseTime",
        "RaceType"
      ],
      "members": {
        "LeaderboardArn": {
          "shape": "LeaderboardArn"
        },
        "LeaderboardName": {
          "shape": "LeaderboardName"
        },
        "WinnerAlias": {
          "shape": "Alias"
        },
        "CloseTime": {
          "shape": "epochTimeMillis"
        },
        "RaceType": {
          "shape": "RaceType"
        }
      }
    },
    "WinnerList": {
      "type": "list",
      "member": {
        "shape": "Winner"
      }
    },
    "boolean": {
      "type": "boolean"
    },
    "double": {
      "type": "double"
    },
    "epochTimeMillis": {
      "type": "long"
    },
    "integer": {
      "type": "integer"
    },
    "map": {
      "type": "map",
      "key": {
        "shape": "StandardLengthString"
      },
      "value": {
        "shape": "StandardLengthString"
      }
    }
  }
}